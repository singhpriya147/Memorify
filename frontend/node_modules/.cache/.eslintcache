[{"D:\\memories\\frontend\\src\\index.js":"1","D:\\memories\\frontend\\src\\App.js":"2","D:\\memories\\frontend\\src\\reportWebVitals.js":"3","D:\\memories\\frontend\\src\\app\\store.js":"4","D:\\memories\\frontend\\src\\pages\\Login.jsx":"5","D:\\memories\\frontend\\src\\pages\\Dashboard.jsx":"6","D:\\memories\\frontend\\src\\pages\\Register.jsx":"7","D:\\memories\\frontend\\src\\features\\Posts\\postSlice.js":"8","D:\\memories\\frontend\\src\\features\\auth\\authSlice.js":"9","D:\\memories\\frontend\\src\\features\\Posts\\postService.js":"10","D:\\memories\\frontend\\src\\features\\auth\\authService.js":"11","D:\\memories\\frontend\\src\\components\\PostForm.jsx":"12","D:\\memories\\frontend\\src\\components\\styling.js":"13","D:\\memories\\frontend\\src\\components\\PostItem.jsx":"14","D:\\memories\\frontend\\src\\components\\Header.jsx":"15","D:\\memories\\frontend\\src\\components\\MyProfile.jsx":"16","D:\\memories\\frontend\\src\\pages\\MyPosts.jsx":"17","D:\\memories\\frontend\\src\\components\\UserItem.jsx":"18","D:\\memories\\frontend\\src\\pages\\Main.jsx":"19","D:\\memories\\frontend\\src\\components\\FlexBetween.jsx":"20","D:\\memories\\frontend\\src\\components\\WidgetWrapper.jsx":"21","D:\\memories\\frontend\\src\\components\\commentCard\\commentCard.jsx":"22","D:\\memories\\frontend\\src\\components\\commentCard\\CommentCard.jsx":"23","D:\\memories\\frontend\\src\\components\\CommentCard\\CommentCard.jsx":"24","D:\\memories\\frontend\\src\\Actions\\Post.js":"25","D:\\memories\\frontend\\src\\components\\UpdateProfile.jsx":"26","D:\\memories\\frontend\\src\\components\\UpdatePassword.jsx":"27","D:\\Memorify\\frontend\\src\\index.js":"28","D:\\Memorify\\frontend\\src\\App.js":"29","D:\\Memorify\\frontend\\src\\app\\store.js":"30","D:\\Memorify\\frontend\\src\\pages\\Dashboard.jsx":"31","D:\\Memorify\\frontend\\src\\pages\\Main.jsx":"32","D:\\Memorify\\frontend\\src\\pages\\Login.jsx":"33","D:\\Memorify\\frontend\\src\\pages\\MyPosts.jsx":"34","D:\\Memorify\\frontend\\src\\pages\\Register.jsx":"35","D:\\Memorify\\frontend\\src\\components\\MyProfile.jsx":"36","D:\\Memorify\\frontend\\src\\components\\UpdateProfile.jsx":"37","D:\\Memorify\\frontend\\src\\components\\UpdatePassword.jsx":"38","D:\\Memorify\\frontend\\src\\features\\auth\\authSlice.js":"39","D:\\Memorify\\frontend\\src\\features\\Posts\\postSlice.js":"40","D:\\Memorify\\frontend\\src\\components\\styling.js":"41","D:\\Memorify\\frontend\\src\\components\\PostForm.jsx":"42","D:\\Memorify\\frontend\\src\\components\\PostItem.jsx":"43","D:\\Memorify\\frontend\\src\\components\\FlexBetween.jsx":"44","D:\\Memorify\\frontend\\src\\components\\Header.jsx":"45","D:\\Memorify\\frontend\\src\\components\\UserItem.jsx":"46","D:\\Memorify\\frontend\\src\\features\\auth\\authService.js":"47","D:\\Memorify\\frontend\\src\\features\\Posts\\postService.js":"48","D:\\Memorify\\frontend\\src\\components\\WidgetWrapper.jsx":"49","D:\\Memorify\\frontend\\src\\components\\CommentCard\\CommentCard.jsx":"50"},{"size":335,"mtime":1679684760727,"results":"51","hashOfConfig":"52"},{"size":1165,"mtime":1688901074646,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1675420814765,"results":"54","hashOfConfig":"52"},{"size":282,"mtime":1684398177507,"results":"55","hashOfConfig":"52"},{"size":5761,"mtime":1688982830450,"results":"56","hashOfConfig":"52"},{"size":8722,"mtime":1688982806244,"results":"57","hashOfConfig":"52"},{"size":3803,"mtime":1688982855545,"results":"58","hashOfConfig":"52"},{"size":9590,"mtime":1688982780263,"results":"59","hashOfConfig":"52"},{"size":8481,"mtime":1689054178605,"results":"60","hashOfConfig":"52"},{"size":2826,"mtime":1688982749274,"results":"61","hashOfConfig":"52"},{"size":2319,"mtime":1689065460219,"results":"62","hashOfConfig":"52"},{"size":3784,"mtime":1688982485639,"results":"63","hashOfConfig":"52"},{"size":1571,"mtime":1686937064465,"results":"64","hashOfConfig":"52"},{"size":10655,"mtime":1688982539168,"results":"65","hashOfConfig":"52"},{"size":5204,"mtime":1688982459511,"results":"66","hashOfConfig":"52"},{"size":3774,"mtime":1688920570171,"results":"67","hashOfConfig":"52"},{"size":1583,"mtime":1684406978900,"results":"68","hashOfConfig":"52"},{"size":3528,"mtime":1688982632767,"results":"69","hashOfConfig":"52"},{"size":389,"mtime":1681231920567,"results":"70","hashOfConfig":"52"},{"size":212,"mtime":1686650375566,"results":"71","hashOfConfig":"52"},{"size":218,"mtime":1686844480559,"results":"72","hashOfConfig":"52"},{"size":1860,"mtime":1687894191983,"results":"73","hashOfConfig":"52"},{"size":1860,"mtime":1687894191983,"results":"74","hashOfConfig":"52"},{"size":2385,"mtime":1688982431663,"results":"75","hashOfConfig":"52"},{"size":493,"mtime":1687877639148,"results":"76","hashOfConfig":"52"},{"size":2450,"mtime":1688982615020,"results":"77","hashOfConfig":"52"},{"size":1561,"mtime":1688929712043,"results":"78","hashOfConfig":"52"},{"size":335,"mtime":1679684760727,"results":"79","hashOfConfig":"80"},{"size":1165,"mtime":1688901074646,"results":"81","hashOfConfig":"80"},{"size":282,"mtime":1684398177507,"results":"82","hashOfConfig":"80"},{"size":8763,"mtime":1690812375646,"results":"83","hashOfConfig":"80"},{"size":389,"mtime":1681231920567,"results":"84","hashOfConfig":"80"},{"size":5761,"mtime":1688982830450,"results":"85","hashOfConfig":"80"},{"size":1583,"mtime":1684406978900,"results":"86","hashOfConfig":"80"},{"size":3803,"mtime":1688982855545,"results":"87","hashOfConfig":"80"},{"size":3749,"mtime":1690796943476,"results":"88","hashOfConfig":"80"},{"size":3421,"mtime":1690803877370,"results":"89","hashOfConfig":"80"},{"size":2444,"mtime":1690803496935,"results":"90","hashOfConfig":"80"},{"size":8970,"mtime":1690804394695,"results":"91","hashOfConfig":"80"},{"size":9660,"mtime":1690810549526,"results":"92","hashOfConfig":"80"},{"size":1187,"mtime":1690808949730,"results":"93","hashOfConfig":"80"},{"size":3912,"mtime":1690808506332,"results":"94","hashOfConfig":"80"},{"size":10269,"mtime":1690802959736,"results":"95","hashOfConfig":"80"},{"size":212,"mtime":1686650375566,"results":"96","hashOfConfig":"80"},{"size":4523,"mtime":1690796658181,"results":"97","hashOfConfig":"80"},{"size":3538,"mtime":1690742494194,"results":"98","hashOfConfig":"80"},{"size":2378,"mtime":1690813743371,"results":"99","hashOfConfig":"80"},{"size":2848,"mtime":1690810417263,"results":"100","hashOfConfig":"80"},{"size":218,"mtime":1686844480559,"results":"101","hashOfConfig":"80"},{"size":2449,"mtime":1690810741143,"results":"102","hashOfConfig":"80"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9qoca8",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gkl8o3",{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},"D:\\memories\\frontend\\src\\index.js",[],[],"D:\\memories\\frontend\\src\\App.js",["285","286"],[],"\nimport React from 'react'\nimport {BrowserRouter as Router,Routes,Route} from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify';\nimport Dashboard from './pages/Dashboard';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport MyPosts from './pages/MyPosts';\nimport MyProfile from './components/MyProfile';\nimport Main from './pages/Main';\nimport UpdateProfile from './components/UpdateProfile';\nimport UpdatePassword from './components/UpdatePassword';\n// import { CssBaseline } from '@mui/material';\nfunction App() {\n\n  return (\n    <>\n      <Router>\n        {/* <CssBaseline /> */}\n        <Routes>\n          <Route path='/' element={<Main />} />\n          {/* <Route path='/' element={<Dashboard />} /> */}\n          <Route path='/login' element={<Login />} />\n          <Route path='/register' element={<Register />} />\n          <Route path='/Myposts' element={<MyPosts />} />\n          <Route path='/update/profile' element={<UpdateProfile />} />\n          <Route path='/update/password' element={<UpdatePassword />} />\n        </Routes>\n      </Router>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App","D:\\memories\\frontend\\src\\reportWebVitals.js",[],[],"D:\\memories\\frontend\\src\\app\\store.js",[],[],"D:\\memories\\frontend\\src\\pages\\Login.jsx",[],[],"D:\\memories\\frontend\\src\\pages\\Dashboard.jsx",["287","288","289","290","291","292","293","294","295","296","297","298","299"],[],"import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostItem from '../components/PostItem';\r\nimport Header from '../components/Header'\r\nimport { reset } from '../features/auth/authSlice';\r\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\r\nimport { FaQuoteRight } from 'react-icons/fa';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport MyProfile from '../components/MyProfile';\r\nimport { Box, Card, Typography } from '@material-ui/core';\r\nimport { flexbox } from '@mui/system';\r\nimport { getUserFeed } from '../features/Posts/postSlice';\r\nimport {Grid} from '@material-ui/core'\r\nimport { getUser } from '../features/auth/authSlice';\r\n// import { getAllPerson } from '../features/auth/authSlice';\r\n// import { Container } from '@mui/material';\r\n\r\nimport UserItem from '../components/UserItem'\r\nimport FlexBetween from '../components/FlexBetween';\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // const [posts, setPosts] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [index,setIndex]=useState(0);\r\n  const {posts} = useSelector(\r\n    (state) => state.post\r\n  );\r\n  // console.log(posts.posts.length);\r\n   const isNonMobileScreens = useMediaQuery('(min-width:960px)');\r\n \r\n\r\n  // const userId = user._id;\r\n  const token = user.token;\r\n\r\n  useEffect(() => {\r\n\r\n     dispatch(getUserFeed());\r\n    // getUserFeed();\r\n    //  console.log(\" after dispatch of getuserfeed\");\r\n  \r\n    // dispatch(getUser())\r\n     getAllPerson();\r\n\r\n    //  .then((response)=>{\r\n    //     setPersons(response.data.users);\r\n    //     // console.log(response.data);\r\n\r\n    //  })\r\n    //  .catch((error)=>{\r\n    //   console.error(error);\r\n    //  })\r\n    // return () => {\r\n    //   dispatch(reset());\r\n    // };\r\n  }, [])\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const getUserFeed = async () => {\r\n  //   const res = await fetch(`http://localhost:5000/api/posts`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`,\r\n  //     },\r\n  //   });\r\n  //   const post = await res.json();\r\n\r\n  //   setPosts(post.posts);\r\n\r\n  //   console.log(post);\r\n  // };\r\n\r\n  const getAllPerson = async () => {\r\n\r\n    try{\r\n    const res = await fetch(`http://localhost:5000/api/users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const allUsers = await res.json();\r\n\r\n    // console.log(allUsers.users);\r\n    setPersons(allUsers.users);\r\n    \r\n    }\r\n    catch(error){\r\n  // console.error(error);\r\n  \r\n    }\r\n  };\r\n\r\n\r\n  \r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      {isNonMobileScreens ? (\r\n        <Box\r\n          sx={{\r\n            // width: '100vh',\r\n            padding: '2rem',\r\n            gap: '0.5rem',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            // bgcolor: 'red',\r\n          }}\r\n          // justifyContent= 'center'\r\n        >\r\n          {/* loggedin user profile */}\r\n          <Box sx={{ bgcolor: 'green', display: { xs: 'none', md: 'block' } }}>\r\n            {user ? (\r\n              <MyProfile key={user._id} userId={user._id} token={user.token} />\r\n            ) :null}\r\n          </Box>\r\n\r\n          {/*  form for post */}\r\n          <Box>\r\n            <PostForm />\r\n\r\n            {/*  feed area */}\r\n            <Box\r\n              sx={{\r\n                paddingTop: '3rem',\r\n              }}\r\n            >\r\n              {posts.posts && posts.posts.length > 0 ? (\r\n                <Box>\r\n                  {posts.posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>You have not set any memories</Typography>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* avilable user to follow */}\r\n          <Box\r\n            sx={{\r\n              alignContent: 'center',\r\n              bgcolor: 'orange',\r\n              display: { xs: 'none', md: 'block' },\r\n            }}\r\n          >\r\n            {persons ? (\r\n              persons.length > 0 ? (\r\n                <Box\r\n                // sx={{ width: 300, height: 300 }}\r\n                >\r\n                  {persons.map((person) => (\r\n                    <UserItem key={person._id} person={person} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>no user available to follow</Typography>\r\n              )\r\n            ) : (\r\n              <Typography>Loading...</Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            // width: '100vh',\r\n            padding: '2rem',\r\n            gap: '0.5rem',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            // bgcolor: 'red',\r\n          }}\r\n          // justifyContent= 'center'\r\n        >\r\n          {/* loggedin user profile */}\r\n\r\n          {/*  form for post */}\r\n          <Box>\r\n            <PostForm />\r\n            <Box\r\n              sx={{\r\n                bgcolor: 'green',\r\n                //  display: { xs: 'none', md: 'block' }\r\n              }}\r\n            >\r\n              {user ? (\r\n                <MyProfile\r\n                  key={user._id}\r\n                  userId={user._id}\r\n                  token={user.token}\r\n                />\r\n              ) : null}\r\n            </Box>\r\n            {/*  feed area */}\r\n            <Box\r\n              sx={{\r\n                paddingTop: '3rem',\r\n              }}\r\n            >\r\n              {posts.posts && posts.posts.length > 0 ? (\r\n                <Box>\r\n                  {posts.posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>You have not set any memories</Typography>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* avilable user to follow */}\r\n\r\n          <Box\r\n            sx={{\r\n              alignContent: 'center',\r\n              // bgcolor: 'orange',\r\n              // display: { xs: 'none', md: 'block' },\r\n            }}\r\n          >\r\n            {persons ? (\r\n              persons.length > 0 ? (\r\n                <Box\r\n                // sx={{ width: 300, height: 300 }}\r\n                >\r\n                  {persons.map((person) => (\r\n                    <UserItem key={person._id} person={person} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>no user available to follow</Typography>\r\n              )\r\n            ) : (\r\n              <Typography>Loading...</Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* <Box\r\n        sx={{\r\n          // width: '100vh',\r\n          padding: '2rem',\r\n          gap: '0.5rem',\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          \r\n        }}\r\n       \r\n      > */}\r\n      {/* loggedin user profile */}\r\n      {/* <Box sx={{ bgcolor: 'green', display: { xs: 'none', md: 'block' } }}>\r\n          {user ? (\r\n            <MyProfile key={user._id} userId={user._id} token={user.token} />\r\n          ) : null}\r\n        </Box> */}\r\n\r\n      {/*  form for post */}\r\n      {/* <Box>\r\n          <PostForm />\r\n\r\n          {/*  feed area */}\r\n      {/* <Box\r\n            sx={{\r\n              paddingTop: '3rem',\r\n            }}\r\n          >\r\n            {posts.posts && posts.posts.length > 0 ? (\r\n              <Box>\r\n                {posts.posts.map((post) => (\r\n                  <PostItem key={post._id} post={post} />\r\n                ))}\r\n              </Box>\r\n            ) : (\r\n              <Typography>You have not set any memories</Typography>\r\n            )}\r\n          </Box> */}\r\n      {/* </Box> */}\r\n\r\n      {/* avilable user to follow */}\r\n      {/* <Box\r\n          sx={{\r\n            alignContent: 'center',\r\n            bgcolor: 'orange',\r\n            display: { xs: 'none', md: 'block' },\r\n          }}\r\n        >\r\n          {persons ? (\r\n            persons.length > 0 ? (\r\n              <Box sx={{ width: 300, height: 300 }}>\r\n                {persons.map((person) => (\r\n                  <UserItem key={person._id} person={person} />\r\n                ))}\r\n              </Box>\r\n            ) : (\r\n              <Typography>no user available to follow</Typography>\r\n            )\r\n          ) : (\r\n            <Typography>Loading...</Typography>\r\n          )}\r\n        </Box> */}\r\n      {/* </Box> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\memories\\frontend\\src\\pages\\Register.jsx",["300"],[],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport {toast} from 'react-toastify'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { reset,register } from '../features/auth/authSlice'\r\nimport './Register.css'\r\nimport FileBase from 'react-file-base64';\r\n\r\n\r\n\r\nfunction Register() {\r\n const [formData,setFormData]=useState({\r\n  name:'',\r\n  email:'',\r\n  password:'',\r\n  password2:'',\r\n  profilePicture:'',\r\n  location:'',\r\n  ocuppation:'',\r\n\r\n })\r\n\r\n const{name,email,password,password2, profilePicture,location,occupation}=formData\r\nconst navigate = useNavigate();\r\n const dispatch=useDispatch()\r\n\r\nconst { user, isLoading, isError, isSuccess, message } = useSelector(\r\n  (state) => state.auth\r\n);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (isError) {\r\n    toast.error(message);\r\n  }\r\n  if (isSuccess || user) {\r\n    navigate('/');\r\n  }\r\n  dispatch(reset());\r\n}, [user, isError, isSuccess, message, navigate, dispatch]);\r\n\r\n\r\n const onChange=(e)=>{\r\n setFormData((prevState)=>({\r\n  ...prevState,\r\n  [e.target.name]:e.target.value,\r\n }))\r\n }\r\n\r\n const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   if(password!==password2){\r\n    // console.log('password odesnt match')\r\n   }\r\n   else{\r\n    const userData={name,email,password,profilePicture,location,occupation}\r\n    console.log(userData)\r\n    dispatch(register(userData))\r\n   };\r\n };\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <div className='header'>\r\n          <h1>registration </h1>\r\n          <p>please register yourself</p>\r\n        </div>\r\n        {/* form section */}\r\n        <form className='form' onSubmit={handleSubmit}>\r\n          <div>\r\n            <input\r\n              type='name'\r\n              id='name'\r\n              name='name'\r\n              value={name}\r\n              placeholder='enter your name'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n         \r\n          <div>\r\n            <input\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='enter your email'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              value={password}\r\n              placeholder='password'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type='password'\r\n              id='password2'\r\n              name='password2'\r\n              value={password2}\r\n              placeholder='confirm password'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              id='location'\r\n              name='location'\r\n              value={location}\r\n              placeholder='your location'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              id='occupation'\r\n              name='occupation'\r\n              value={occupation}\r\n              placeholder='your occupation'\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3> Add your profile picture</h3>\r\n            <FileBase\r\n              type='file'\r\n              multiple={false}\r\n              placeholder='profile picture'\r\n              onDone={({ base64 }) =>\r\n                setFormData({ ...formData, profilePicture: base64 })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <button type='submit' className='btn'>Submit</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register\r\n","D:\\memories\\frontend\\src\\features\\Posts\\postSlice.js",[],[],"D:\\memories\\frontend\\src\\features\\auth\\authSlice.js",["301"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from './authService';\r\n// async thunk function -that deal with async data backend\r\n\r\n// Get user which contain basic user data and a token  from localStorage\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n//register user\r\n\r\n// 'auth/register' is action user is passed in from register component  and dispatch register form there\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (user, thunkAPI) => {\r\n    //make a request\r\n    try {\r\n      return await authService.register(user);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response && error.response.data && error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\r\n  try {\r\n    return await authService.login(user);\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n// get   a user\r\nexport const getUser=createAsyncThunk('auth/getUser',async(id,thunkAPI)=>{\r\n  try {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n    // console.log(token);\r\n     const response=await fetch(`http://localhost:5000/api/users/${id}`,\r\n     {\r\n      method:'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        Authorization:`Bearer ${token}`,\r\n      }\r\n      \r\n\r\n     })\r\n     const data=await response.json();\r\n    //  console.log(data);\r\n     return data;\r\n\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n    // return message\r\n  }\r\n})\r\n\r\n// get all users available \r\n\r\n   export const getAllPerson = createAsyncThunk ('auth/getAllPerson',async(_,thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      // console.log(token);\r\n\r\n\r\n\r\n      \r\n     const response = await fetch(`http://localhost:5000/api/users`, {\r\n    //  const response = await fetch(`process.env.BASE_URL/api/users`, {\r\n       method: 'GET',\r\n       headers: {\r\n         Authorization: `Bearer${token}`,\r\n       },\r\n     });\r\n      const data = await response.json();\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n\r\n     const message =\r\n       (error.response && error.response.data && error.response.data.message) ||\r\n       error.message ||\r\n       error.toString();\r\n     return thunkAPI.rejectWithValue(message);\r\n    }\r\n  });\r\n\r\n\r\n\r\nexport const updateProfile = createAsyncThunk(\r\n  'auth/updateProfile',\r\n  async ({name,email},thunkAPI) => {\r\n    //make a request\r\n    try {\r\n      \r\n     const token = thunkAPI.getState().auth.user.token;\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/users/update/profile`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n           'Authorization': `Bearer ${token}`\r\n          },\r\n          body: JSON.stringify({  name:name, email:email }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      // console.log(\"data after update\",data);\r\n      // console.log(token)\r\n      return data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n      // console.log(\" error in updating the profile \",error);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const updatePassword=createAsyncThunk('auth/updatePassword',async({oldPassword,newPassword},thunkAPI)=>{\r\n  try {\r\n    const token=thunkAPI.getState().auth.user.token;\r\n    const response=await fetch(`http://localhost:5000/api/users/update/password`,{\r\n      method:'PUT',\r\n      header:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':`Bearer${token}`\r\n      },\r\n      body:JSON.stringify({oldPassword:oldPassword,newPassword:newPassword})\r\n    });\r\n    const data=await response.json();\r\n    // console.log(\" data after change password\",data);\r\n  } catch (error) {\r\n\r\n    const message=( error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message); \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// logut user\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  await authService.logout();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// make slice\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // pending\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      // fulfilled\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n\r\n      //rejected\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      // case for logut\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      })\r\n      // case for getting user\r\n\r\n      .addCase(getUser.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n      // .addCase(getAllPerson.pending, (state) => {\r\n      //   state.isLoading = true;\r\n      // })\r\n      // .addCase(getAllPerson.fulfilled, (state, action) => {\r\n      //   state.isLoading = false;\r\n      //   state.isSuccess = true;\r\n      //   state.user = action.payload;\r\n      // })\r\n      // .addCase(getAllPerson.rejected, (state, action) => {\r\n      //   state.isLoading = false;\r\n      //   state.isError = true;\r\n      //   state.message = action.payload;\r\n      // })\r\n      // pending\r\n\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      // fulfilled\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user.name = action.payload.name;\r\n        state.user.email = action.payload.email;\r\n      })\r\n\r\n      //rejected\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        // state.user = null;\r\n      })\r\n\r\n\r\n\r\n      .addCase(updatePassword.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      .addCase(updatePassword.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload\r\n      })\r\n      .addCase(updatePassword.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        // state.user = null;\r\n      });\r\n\r\n  },\r\n});\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","D:\\memories\\frontend\\src\\features\\Posts\\postService.js",["302","303"],[],"import axios from 'axios';\r\nconst API_URL='/api/posts';\r\n\r\n// create new post\r\n\r\nconst createPost=async(postData,token)=>{\r\n const config = {\r\n   headers: {\r\n     Authorization: `Bearer ${token}`,\r\n   },\r\n };\r\n  const response = await axios.post(API_URL, postData, config);\r\n  // console.log('data posted');\r\n  return response.data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const createPost = async (postData, token) => {\r\n//   const config = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(postData),\r\n//   };\r\n\r\n//   try {\r\n//     const response = await fetch(API_URL, config);\r\n//     console.log('data posted');\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getUserFeed = async (token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL,config);\r\n  // console.log(' getFeedpost is working');\r\n  // console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst getUserPosts = async (userId,token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL + '/' + `${userId}`+ '/posts', config);\r\n  // console.log(' getUserpost is working');\r\n  // console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst deletePost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.delete(API_URL +'/'+postId, config);\r\n  // console.log(response);\r\n  // console.log(' post is deleted');\r\n  return response.data;\r\n};\r\n\r\n// const editPost = async (postId,editCaption, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   };\r\n//  const captionData={\r\n//   value:editCaption,\r\n//  }\r\n//   const response = await axios.put(API_URL + '/' + `${postId}`, captionData,config);\r\n//   console.log(response);\r\n//   return response.data;\r\n// };\r\n\r\n// const addComment = async (postId,commentValue, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//       'Content-Type':'application/json'\r\n//     },\r\n//   };\r\n//  const postData = {\r\n//    value: commentValue,\r\n//  };\r\n\r\n//   const response = await axios.put(API_URL + '/'+'comment' + '/'+`${postId}` ,postData,config);\r\n//   console.log(response);\r\n//    console.log(' comment added');\r\n//   return response.data;\r\n// };\r\n\r\n\r\n\r\nconst postService = {\r\n  createPost,\r\n  getUserFeed,\r\n  getUserPosts,\r\n  deletePost,\r\n  // editPost,\r\n  // addComment,\r\n};\r\n\r\nexport default postService;","D:\\memories\\frontend\\src\\features\\auth\\authService.js",[],[],"D:\\memories\\frontend\\src\\components\\PostForm.jsx",["304","305","306","307","308","309"],[],"import  React from 'react';\r\nimport {useStyles }from './styling';\r\nimport  Typography  from '@mui/material/Typography';\r\n\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch} from 'react-redux'\r\nimport Paper from '@mui/material/Paper';\r\nimport Card from '@mui/material/Card'\r\nimport TextField from '@mui/material/TextField';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\n// import CardHeader from '@mui/material/CardHeader';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport {createPost} from '../features/Posts/postSlice'\r\nimport{useState} from 'react'\r\nimport FlexBetween from './FlexBetween';\r\n\r\n\r\n\r\nfunction PostForm() {\r\n\r\n\r\nconst classes=useStyles()\r\n\r\n   const [postData, setPostData] = useState({\r\n  \r\n  title:'',\r\n  message: '',\r\n  tags:'',\r\n  selectedFile:'',\r\n  fav:false,\r\n   location:'',\r\n   });\r\n\r\n\r\nconst {  title, message, tags, selectedFile,fav ,location} =\r\n  postData;\r\n\r\nconst dispatch=useDispatch()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n\r\n\r\n\r\nconst handleSubmit=(e)=>{\r\n e.preventDefault();\r\n  // console.log(\"clicked submit button\")\r\nconst Data = {\r\n\r\n  title,\r\n  message,\r\n  tags,\r\n  selectedFile,\r\n  fav,\r\n  location,\r\n};\r\n// console.log(Data);\r\n\r\n\r\n  dispatch(createPost(Data))\r\n  \r\n  setPostData({\r\n    \r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    selectedFile: '',\r\n    location:'',\r\n  });\r\n};\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          name='title'\r\n          variant='outlined'\r\n          label='Caption'\r\n          fullWidth\r\n          multiline\r\n          value={postData.title}\r\n          // className={classes.textField}\r\n          inputProps={classes.textField}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          name='message'\r\n          variant='outlined'\r\n          label='Message'\r\n          multiline\r\n          fullWidth\r\n          rows={1}\r\n          value={postData.message}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          name='location'\r\n          variant='outlined'\r\n          label='Location'\r\n          fullWidth\r\n          multiline\r\n          value={postData.location}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, location: e.target.value })\r\n          }\r\n        />\r\n\r\n        {/* <TextField\r\n          name='tags'\r\n          variant='outlined'\r\n          label='Tags (coma separated)'\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(',') })\r\n          }\r\n        /> */}\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type='file'\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          // className={classes.buttonSubmit}\r\n          variant='contained'\r\n          color='primary'\r\n          size='large'\r\n          type='submit'\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        {/* <Button\r\n          className={classes.buttonClear}\r\n          variant='contained'\r\n          color='secondary'\r\n          // size='small'\r\n          // onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button> */}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default PostForm\r\n\r\n\r\n\r\n","D:\\memories\\frontend\\src\\components\\styling.js",["310","311"],[],"import { makeStyles } from '@material-ui/core';\r\n// import { useTheme } from '@material-ui/styles';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport const useStyles = makeStyles(theme=>({\r\n  root: {\r\n    '& .MuiTextField-root': {},\r\n    // 'background-color':red\r\n  },\r\n\r\n  form: {\r\n    //  display: 'flex',\r\n\r\n    //  flexWrap: 'wrap',\r\n    //  justifyContent: 'center',\r\n    //  height: 320,\r\n    //  width: 600,\r\n    backgroundColor: '#fff',\r\n    padding: '2rem',\r\n    borderRadius: '0.5rem',\r\n    boxShadow: ' 0px 0px 5px #ddd',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n  },\r\n\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 5,\r\n    height: '15px',\r\n  },\r\n\r\n  textField: {\r\n    margin: '0.5rem',\r\n  },\r\n  // userCard: {\r\n  //   maxWidth: 345,\r\n  //   [theme.breakpoints.down('md')]: {\r\n  //     maxWidth: 200,\r\n  //   },\r\n  // },\r\n  \r\n\r\n  //  buttonClear: {\r\n  //   //  marginBottom: 5,\r\n  //    height: '25px',\r\n  //  },\r\n}));\r\n\r\nexport const theme = createTheme({\r\n  components: {\r\n    // Name of the component\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        // Name of the slot\r\n        root: {\r\n          // Some CSS\r\n          backgroundColor: '#917FB3',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        // Name of the slot\r\n        root: {\r\n          // Some CSS\r\n          backgroundColor: '#E5BEEC',\r\n          color: '#2A2F4F',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","D:\\memories\\frontend\\src\\components\\PostItem.jsx",["312","313","314","315"],[],"import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Card from '@mui/material/Card';\r\nimport { Input, TextField } from '@material-ui/core';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { Typography } from '@material-ui/core';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getUserFeed } from '../features/Posts/postSlice';\r\nimport Box from '@mui/material/Box';\r\nimport {\r\n  ChatBubbleOutline,\r\n  Favorite,\r\n  FavoriteBorder,\r\n} from '@mui/icons-material';\r\n\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { deletePost } from '../features/Posts/postSlice';\r\nimport { editPost } from '../features/Posts/postSlice';\r\nimport { Button} from '@mui/material';\r\nimport { addComment } from '../features/Posts/postSlice';\r\n\r\n\r\nimport CommentCard from './CommentCard/CommentCard';\r\n// import {\r\n//   addCommentOnPost,\r\n//   // deletePost,\r\n//   // likePost,\r\n//   // updatePost,\r\n// } from '../Actions/Post';\r\n\r\nexport default function PostItem({ post }) {\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [liked, setLiked] = useState(post.likes.includes(user._id));\r\n  const [noOfLikes, setNo] = useState(post.likes.length);\r\n\r\n  const [commentValue, setCommentValue] = useState('');\r\n  const [commentToggle, setCommentToggle] = useState(false);\r\n\r\n  const[editCaption,setEditCaption]=useState('');\r\n\r\nconst [editCaptionToggle, setEditCaptionToggle] = useState(false);\r\n  //  const[isDelete,setIsDelete]=useState(false);\r\n  //  const[isAccount,setIsAccount]=useState(false);\r\n\r\n  //  console.log(post);\r\n  //  console.log(post.likes.length);\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = user._id;\r\n  const token = user.token;\r\n  // console.log(\"logged in user userId\")\r\n  // console.log(userId);\r\n  const postId = post._id;\r\n  // console.log(postId);\r\n  const handleLike = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/posts/${post._id}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          // credentials: 'include',\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setLiked(true);\r\n        setNo(noOfLikes + 1);\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n  const handleUnlike = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/posts/${post._id}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          //  credentials: 'include',\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setLiked(false);\r\n        setNo(noOfLikes - 1);\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  const addCommentHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(' post comments');\r\n    console.log(post.comments.length);\r\n    const commentData = {\r\n      id: postId, // Assuming postId is defined\r\n      value: commentValue, // Assuming commentValue is defined\r\n    };\r\n    //  console.log(commentData);\r\n    await dispatch(addComment(commentData));\r\n    // console.log(' after dispatch of addcomment ');\r\n    // if (isAccount) {\r\n    //   dispatch(getMyPosts());\r\n    // } else {\r\n    setCommentValue(''); // Clear the comment input field\r\n      //  setCommentToggle(false);\r\n    await dispatch(getUserFeed());\r\n\r\n    // try {\r\n\r\n    //   const res= await  dispatch(addComment(commentData));\r\n    //   // update the post locally with the newly added comment\r\n    //    const newCommentId = res.data._id;\r\n\r\n    //   const newComment = {\r\n    //     _id: newCommentId, // Replace 'new-comment-id' with the actual ID of the new comment\r\n    //     user: user._id,\r\n    //     comment: commentValue,\r\n    //   };\r\n    //    setCommentValue(''); // Clear the comment input field\r\n    //    setCommentToggle(false);\r\n\r\n    //      post.comments((prevComments) => [...prevComments, newComment]);\r\n\r\n    // } catch (error) {\r\n    //     console.error('Error adding comment:', error);\r\n    // }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  const editCaptionHandler = async(e) => {\r\n     e.preventDefault();\r\n    // console.log(\" post caption edited\");\r\n    const captionData={\r\n      id:postId,\r\n      value:editCaption,\r\n    }\r\n     await dispatch(editPost(captionData));\r\n     setEditCaption('');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Card\r\n        sx={{\r\n          mb: '1vmax',\r\n          boxShadow: '3',\r\n        }}\r\n      >\r\n        <CardHeader title={post.title} subheader={post.creator} />\r\n        <Typography variant='subheader' color='text.secondary'>\r\n          {new Date(post.createdAt).toLocaleString()}\r\n        </Typography>\r\n\r\n        <Typography sx={{ fontSize: 14 }} color='text.secondary'>\r\n          {post.location}\r\n        </Typography>\r\n        <CardMedia\r\n          component='img'\r\n          sx={{ heigth: 140 }}\r\n          image={post.selectedFile}\r\n          alt='Paella dish'\r\n        />\r\n        <CardContent>\r\n          <Typography variant='body2' color='text.secondary'>\r\n            {post.message}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Button>\r\n            {liked ? (\r\n              <Favorite style={{ color: 'red' }} onClick={handleUnlike} />\r\n            ) : (\r\n              <FavoriteBorder style={{ color: 'grey' }} onClick={handleLike} />\r\n            )}\r\n          </Button>\r\n          <Typography>{noOfLikes}</Typography>\r\n\r\n          <Button onClick={() => setCommentToggle(!commentToggle)}>\r\n            <ChatBubbleOutline />\r\n            <Typography>{post.comments.length}</Typography>\r\n          </Button>\r\n\r\n          <Dialog\r\n            open={commentToggle}\r\n            onClose={() => setCommentToggle(!commentToggle)}\r\n          >\r\n            <div style={{ minwidth: 500, height: '100vh', padding: '2vmax' }}>\r\n              <Typography variant='h4'>Comments</Typography>\r\n              <form\r\n                // style={{ display: 'flex ', margin: '1vmax' }}\r\n                style={{\r\n                  backgroundColor: '#fff',\r\n                  padding: '2rem',\r\n                  borderRadius: '0.5rem',\r\n                  boxShadow: ' 0px 0px 5px #ddd',\r\n                  textAlign: 'center',\r\n                  width: '100%',\r\n                }}\r\n                onSubmit={addCommentHandler}\r\n              >\r\n                <TextField\r\n                  value={commentValue}\r\n                  onChange={(e) => setCommentValue(e.target.value)}\r\n                  placeholder='Comment Here...'\r\n                  required\r\n                 \r\n                />\r\n\r\n                <Button type='submit' variant='contained'>\r\n                  Add\r\n                </Button>\r\n              </form>\r\n\r\n              {post.comments && post.comments.length > 0 ? (\r\n                post.comments.map((item) => (\r\n                  // console.log(item.user)\r\n                  <CommentCard\r\n                    userId={item.user}\r\n                    // name={item.user.name}\r\n                    // profilePicture={item.user.profilePicture}\r\n                    comment={item.comment}\r\n                    commentId={item._id}\r\n                    key={item._id}\r\n                    postId={postId}\r\n                    // isAccount={isAccount}\r\n                    token={user.token}\r\n                    postUser={post.user}\r\n                    loggedInUser={user._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Typography>No comments Yet</Typography>\r\n              )}\r\n            </div>\r\n          </Dialog>\r\n\r\n          {/*  post's userid is same as login id then show delete otherwise dont  */}\r\n\r\n          {user._id === post.user ? (\r\n            <IconButton aria-label='delete'>\r\n              <DeleteIcon onClick={() => dispatch(deletePost(post._id))} />\r\n            </IconButton>\r\n          ) : null}\r\n\r\n          {user._id === post.user ? (\r\n            <IconButton aria-label='delete'>\r\n              <EditIcon\r\n                onClick={() => setEditCaptionToggle(!editCaptionToggle)}\r\n              />\r\n              <Dialog open={editCaptionToggle}\r\n              onClose={()=>setEditCaptionToggle(!editCaptionToggle)}> \r\n\r\n              <div style={{ minwidth: 500, height: '100vh', padding: '2vmax' }}>\r\n              <Typography variant='h4'>Edit Caption </Typography>\r\n              <form\r\n               \r\n                style={{\r\n                  backgroundColor: '#fff',\r\n                  padding: '2rem',\r\n                  borderRadius: '0.5rem',\r\n                  boxShadow: ' 0px 0px 5px #ddd',\r\n                  textAlign: 'center',\r\n                  width: '100%',\r\n                }}\r\n                onSubmit={editCaptionHandler}\r\n              >\r\n                <TextField\r\n                  value={editCaption}\r\n                  onChange={(e) => setEditCaption(e.target.value)}\r\n                  placeholder='Caption Here...'\r\n                  required\r\n                  \r\n                />\r\n\r\n                <Button type='submit' variant='contained'>\r\n                  Post\r\n                </Button>\r\n              </form>\r\n{/* \r\n              {post.comments && post.comments.length > 0 ? (\r\n                post.comments.map((item) => (\r\n                  // console.log(item.user)\r\n                  <CommentCard\r\n                    userId={item.user}\r\n                    // name={item.user.name}\r\n                    // profilePicture={item.user.profilePicture}\r\n                    comment={item.comment}\r\n                    commentId={item._id}\r\n                    key={item._id}\r\n                    postId={postId}\r\n                    // isAccount={isAccount}\r\n                    token={user.token}\r\n                    postUser={post.user}\r\n                    loggedInUser={user._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Typography>No comments Yet</Typography>\r\n              )} */}\r\n            </div>\r\n          \r\n\r\n              </Dialog>\r\n            </IconButton>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\memories\\frontend\\src\\components\\Header.jsx",["316","317","318","319","320","321","322","323","324","325","326","327","328"],[],"\r\nimport * as React from 'react';\r\nimport {Link,useNavigate} from 'react-router-dom'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport { theme } from '../components/styling'\r\nimport{useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\n// import Select from '@mui/material/Select';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Close  from '@mui/icons-material/Close';\r\n// import  Menu  from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport FlexBetween from './FlexBetween'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport{logout,reset} from '../features/auth/authSlice'\r\nimport { useMediaQuery } from '@mui/material';\r\nimport { useSelect } from '@mui/base';\r\nimport { ThemeProvider, } from '@mui/material/styles';\r\nimport { green } from '@mui/material/colors';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Header() {\r\n const navigate=useNavigate()\r\n const dispatch=useDispatch()\r\n \r\n // from state we only want user so we use useselector \r\n const {user}=useSelector((state)=>state.auth);\r\n// const [mode, setMode] = useState([]);\r\n// const [isMobileMenuToggled,setIsMobileMenuToggled]=useState(false);\r\n const isNonMobileScreens=useMediaQuery(\"(min-width:960px)\");\r\nconst onLogout=()=>{\r\n  // console.log(\" clicked on logout button\")\r\n  dispatch(logout())\r\n  // dispatch(reset())\r\n  navigate('/login')\r\n}\r\n\r\n\r\n const [anchorel, setAnchorel] = useState(null);\r\n const open = Boolean(anchorel);\r\n const handleClick = (event) => {\r\n   setAnchorel(event.currentTarget);\r\n };\r\n const handleClose = () => {\r\n   setAnchorel(null);\r\n };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <FlexBetween padding=' 0.5rem 6%'>\r\n      <FlexBetween gap='1.75rem'>\r\n        <Typography\r\n          fontWeight='bold'\r\n          //  fontSize='clamp(1rem,2rem,2.25rem)'\r\n          fontSize='2rem'\r\n        >\r\n          <Link to='/' style={{ textDecoration: 'none' }}>\r\n            Memories\r\n          </Link>\r\n        </Typography>\r\n      </FlexBetween>\r\n\r\n      {/* desktop version  */}\r\n      {isNonMobileScreens ? (\r\n        <FlexBetween>\r\n          {user ? (\r\n            <>\r\n              <Button sx={{ mr: 2 }} onClick={onLogout}>\r\n                Logout\r\n              </Button>\r\n\r\n              <Link to='/MyPosts'>\r\n                <Button>My Post</Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to='/Register'>\r\n                <Button>Register</Button>\r\n              </Link>\r\n              <Link to='/Login'>\r\n                <Button>Login</Button>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </FlexBetween>\r\n      ) : (\r\n        // <IconButton\r\n        //   onClick={() => setIsMobileMenuToggled(!isMobileMenuToggled)}\r\n        // >\r\n        //   <Menu />\r\n        // </IconButton>\r\n\r\n        <>\r\n          <Button\r\n            id='demo-positioned-button'\r\n            aria-controls={open ? 'demo-positioned-menu' : undefined}\r\n            aria-haspopup='true'\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </Button>\r\n          <Menu\r\n            id='demo-positioned-menu'\r\n            aria-labelledby='demo-positioned-button'\r\n            anchorel={anchorel}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n          >\r\n            <MenuItem component='a' href='/MyProfile'>\r\n              Profile\r\n            </MenuItem>\r\n\r\n            <MenuItem component='a' href='/MyPosts'>\r\n              My Posts\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={onLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </>\r\n      )}\r\n\r\n      {/* {!isNonMobileScreens && isMobileMenuToggled && (\r\n       */}\r\n      {/* <Button\r\n            id='basic-button'\r\n            aria-controls={open ? 'basic-menu' : undefined}\r\n            aria-haspopup='true'\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={handleClick}\r\n          >\r\n            Dashboard\r\n          </Button> */}\r\n\r\n      {/* <Menu\r\n            id='demo-positioned-menu'\r\n            aria-labelledby='demo-positioned-button'\r\n            anchorel={anchorel}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchororigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformorigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            sx={{zIndex:'10'}}\r\n          > */}\r\n      {/* </div>\r\n      )} */}\r\n\r\n      {/*  version  */}\r\n    </FlexBetween>\r\n  );\r\n}","D:\\memories\\frontend\\src\\components\\MyProfile.jsx",["329","330","331","332","333","334","335","336","337","338","339","340"],[],"import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport { useStyles } from './styling';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\r\nimport { getUser, updateProfile} from '../features/auth/authSlice';\r\nimport FlexBetween from './FlexBetween';\r\nimport { Box } from '@material-ui/core';\r\nimport {Button} from '@mui/material';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction MyProfile({userId,token}) {\r\n  const [user,setUser]=useState({name:'guest'});\r\n  // const { user } = useSelector((state) => state.auth);\r\n  // console.log(user.following);\r\n  const [followingCount, setFollowingCount] = useState(0)\r\n  \r\n  const [followerCount, setFollowerCount] = useState(\r\n    user.follower ? user.follower.length : 0\r\n  );\r\n\r\n  // const id=user._id;\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n  \r\n  useEffect(()=>{\r\n     getData()\r\n     \r\n       setFollowerCount(user.follower ? user.follower.length : 0);\r\n  },[])\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    // dispatch(getUser(id));\r\n    //   // setFollowingCount(user.following ? user.following.length : 0);\r\n    //   // setFollowerCount(user.follower ? user.follower.length : 0);\r\n    // }, [id,dispatch]);\r\n\r\n\r\n\r\n \r\n   const getData = async()=>{\r\n    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const user =await res.json()\r\n    setUser(user)\r\n    // console.log(user)\r\n   }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n//  console.log(followingCount);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        className={classes.userCard}\r\n        sx={{\r\n          height: 350,\r\n          width: 250,\r\n          // display: {\r\n          //   xs: 'none',\r\n          //   md:\"block\"\r\n          // },\r\n        }}\r\n      >\r\n        <CardMedia\r\n          sx={{\r\n            height: 75,\r\n            width: 75,\r\n            borderRadius: 100,\r\n            borderColor: 'blue',\r\n            mt: 1,\r\n          }}\r\n          component='img'\r\n          height='200'\r\n          image={user.profilePicture}\r\n          alt='no img'\r\n        />\r\n        <CardContent>\r\n          <Typography>{user.name}</Typography>\r\n          <Typography>\r\n            <EmailOutlinedIcon />\r\n            {user.email}\r\n          </Typography>\r\n          <Typography>\r\n            {' '}\r\n            <LocationOnOutlinedIcon />\r\n            {user.location}\r\n          </Typography>\r\n          <Typography>\r\n            {' '}\r\n            <WorkOutlineOutlinedIcon />\r\n            {user.occupation}\r\n          </Typography>\r\n\r\n          {user && user.follower ? (\r\n            <Typography> Follower \r\n              {user.follower.length}\r\n\r\n            \r\n             </Typography>\r\n          ) : (\r\n            <Typography>0 </Typography>\r\n          )}\r\n          {user && user.following ? (\r\n            <Typography> Following {user.following.length} </Typography>\r\n          ) : (\r\n            <Typography>0 </Typography>\r\n          )}\r\n          <Link to='/update/profile'>\r\n            <Button  >Update Profile</Button>\r\n          </Link>\r\n          <Link to='/update/password'>\r\n            <Button >Change Password</Button>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","D:\\memories\\frontend\\src\\pages\\MyPosts.jsx",["341","342","343"],[],"import React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {getUserPosts} from '../features/Posts/postSlice';\r\nimport Header from '../components/Header';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport PostItem from '../components/PostItem';\r\nfunction MyPosts() {\r\n\r\n  // const [post,setPost]=useState([])\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.auth);\r\n   const{posts}=useSelector((state)=>state.post)\r\n  //  console.log(user._id,user.token)\r\n\r\n const userId=user._id;\r\n const token=user.token;\r\n\r\n useEffect(() => {\r\n  dispatch(getUserPosts(userId));\r\n\r\n  //  getUserPosts();\r\n }, [userId, token]);\r\n\r\n\r\n  // const getUserPosts = async () => {\r\n  //   const res = await fetch(`http://localhost:5000/api/posts/:${userId}/posts`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`,\r\n  //     },\r\n  //   });\r\n  //   const post = await res.json();\r\n  //   setPost(post);\r\n  //   console.log(post)\r\n  // };\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n      <Box sx={{ padding: '3rem', width: 500, alignContent: 'center' }}>\r\n        {posts.length > 0 ? (\r\n          <Box sx={{ width: 500, height: 300 }}>\r\n            {posts.map((post) => (\r\n              <PostItem key={post._id} post={post} />\r\n            ))}\r\n          </Box>\r\n        ) : (\r\n          <Typography>You have not set any memories</Typography>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","D:\\memories\\frontend\\src\\components\\UserItem.jsx",["344","345","346","347","348","349","350","351"],[],"import { Card } from '@mui/material'\r\nimport { Button, CardHeader } from '@material-ui/core';\r\nimport{ Box} from '@mui/material';\r\nimport {Typography} from '@material-ui/core';\r\nimport {Paper} from '@material-ui/core';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n// import { ThemeProvider } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\nimport FlexBetween from './FlexBetween';\r\nimport WidgetWrapper from './WidgetWrapper'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction UserItem({person}) \r\n\r\n\r\n{\r\n const { user } = useSelector((state) => state.auth);\r\n \r\n  const token = user.token;\r\n  // console.log(user._id);\r\n\r\n \r\nconst [isFollowing, setIsFollowing] = useState(false);\r\nconst [buttonLabel,setButtonLabel]=useState(\"Follow\");\r\n\r\n\r\n  \r\n  \r\n\r\n   const TofollowUser=async()=>{\r\n    const res = await fetch(\r\n      `http://localhost:5000/api/users/follow/${person._id}`,\r\n      { method:'PUT',\r\n        headers: {\r\n          Accept:'application/json',\r\n         'Content-Type':'application/json',\r\n         Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n      const data=await res.json();\r\n      // console.log(data);\r\n      setIsFollowing(true);\r\n      setButtonLabel('Unfollow');\r\n     \r\n   }\r\n const ToUnfollowUser = async () => {\r\n   const res = await fetch(\r\n     `http://localhost:5000/api/users/unfollow/${person._id}`,\r\n     {\r\n       method: 'PUT',\r\n       headers: {\r\n         Accept: 'application/json',\r\n         'Content-Type': 'application/json',\r\n         Authorization: `Bearer ${token}`,\r\n       },\r\n     }\r\n   );\r\n   const data = await res.json();\r\n  //  console.log(data);\r\n   setIsFollowing(false);\r\n    setButtonLabel('Follow');\r\n };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n \r\n\r\n   if(person.follower.includes(  JSON.parse(localStorage.getItem(\"user\"))._id)){\r\n    setIsFollowing(true);\r\n    setButtonLabel('Unfollow')\r\n   }\r\n   else{\r\n     setIsFollowing(false);\r\n      setButtonLabel('Follow');\r\n   }\r\n  },[setIsFollowing.person])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          pl: '2rem',\r\n          pr: '2rem',\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          // backgroundColor: '#E5BEEC',\r\n          // alignItems: 'center',\r\n          borderRadius: '5px',\r\n          mb: '2vmax',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            pb: '0.5rem',\r\n            display: 'flex',\r\n            // bgcolor: 'grey',\r\n            // width: '2rem',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <CardMedia\r\n            sx={{\r\n              height: 40,\r\n              width: 60,\r\n              borderRadius: 100,\r\n              borderColor: 'blue',\r\n              mt: 1,\r\n            }}\r\n            component='img'\r\n            height='50'\r\n            image={person.profilePicture}\r\n            alt='Paella dish'\r\n          />\r\n\r\n          <Typography variant='h6' sx={{ ml: '1rem' }}>\r\n            {person.name}\r\n          </Typography>\r\n\r\n          <Typography>{person.location}</Typography>\r\n\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => {\r\n              if (isFollowing) {\r\n                ToUnfollowUser();\r\n              } else {\r\n                TofollowUser();\r\n              }\r\n            }}\r\n          >\r\n            {buttonLabel}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserItem","D:\\memories\\frontend\\src\\pages\\Main.jsx",[],[],[],"D:\\memories\\frontend\\src\\components\\FlexBetween.jsx",[],[],"D:\\memories\\frontend\\src\\components\\WidgetWrapper.jsx",[],[],"D:\\memories\\frontend\\src\\components\\commentCard\\commentCard.jsx",["352","353","354","355"],[],"D:\\memories\\frontend\\src\\components\\commentCard\\CommentCard.jsx",["356","357","358","359"],[],"D:\\memories\\frontend\\src\\components\\CommentCard\\CommentCard.jsx",["360","361","362"],[],"import { Button, Typography } from '@mui/material';\r\nimport React,{useState,useEffect}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommentCard.css';\r\n// import { Delete } from '@mui/icons-material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserFeed } from '../../features/Posts/postSlice';\r\n// import { deleteCommentOnPost } from '../../Actions/Post';\r\n// import { getFollowingPosts, getMyPosts } from '../../Actions/User';\r\n// import getFollowingPosts from '.';\r\nimport { deleteComment } from '../../features/Posts/postSlice';\r\nconst CommentCard = ({\r\n  userId, // the person who commented\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  token,\r\n  postUser,\r\n  loggedInUser,\r\n}) => {\r\n  const [userInComment, setUserInComment] = useState(null);\r\n  // const { user } = useSelector((state) => state.user);\r\n  // const token=user.token;\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCommentHandle = async () => {\r\n    // console.log(\" delete button clicked\");\r\n    const commentData={\r\n      id:postId,\r\n      commentId:commentId,\r\n    }\r\n\r\n  dispatch(deleteComment(commentData));\r\n  dispatch(getUserFeed());\r\n   window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(userId);\r\n   \r\n  }, [userId, token]);\r\n\r\n  const getData = async () => {\r\n    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const user = await res.json();\r\n    setUserInComment(user);\r\n \r\n  };\r\n\r\n  if (!userInComment) {\r\n    // User data is loading or not available yet\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // console.log(userId);\r\n  return (\r\n    <div className='commentUser'>\r\n      <img src={userInComment.profilePicture} alt={userInComment.name} />\r\n      <Typography\r\n        style={{ minWidth: '6vmax', fontWeight: 'bold', color: 'black' }}\r\n      >\r\n        {userInComment.name}\r\n      </Typography>\r\n\r\n      <Typography>{comment}</Typography>\r\n      {loggedInUser === userId ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      ) : loggedInUser === postUser ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n",[],"D:\\memories\\frontend\\src\\Actions\\Post.js",[],[],"D:\\memories\\frontend\\src\\components\\UpdateProfile.jsx",["363","364"],[],"import React from 'react'\r\nimport Header from './Header'\r\nimport { useState,useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button  from '@mui/material/Button'\r\nimport {  updateProfile } from '../features/auth/authSlice'\r\n// import Dashboard from '../pages/Dashboard'\r\nimport getUser from '../features/auth/authSlice'\r\n\r\nconst UpdateProfile = () => {\r\n// dispatch(getUser(user._id));\r\nconst{user}=useSelector((state)=>state.auth)\r\n// const [user, setUser] = useState({ name: 'guest' });\r\nconst dispatch = useDispatch();\r\n// console.log(\"this is user data before change\",user);\r\n// console.log(user);\r\n\r\n\r\nconst token =user.token;\r\n// console.log(token);\r\n const navigate = useNavigate();\r\n\r\n// const[name,setName]=useState(user? user.name:'');\r\n// const[email,setEmail]=useState(user?user.email:'');\r\n\r\nconst [name, setName] = useState(\"\");\r\nconst[email,setEmail]=useState(\"\");\r\n\r\n// console.log(user._id);\r\n\r\n\r\n// useEffect(() => {\r\n//   dispatch(getUser(user._id));\r\n// }, [dispatch, user._id]);\r\n\r\n\r\nconst submitHandler=async(e)=>{\r\n e.preventDefault();\r\n  \r\n await dispatch(updateProfile( {name, email},token));\r\n    \r\n    //  setName('');\r\n    //  setEmail('');\r\n \r\n    // console.log(\" buttton clicked\")\r\n//  dispatch(getUser(user._id));\r\n\r\n  navigate('/');\r\n  \r\n}\r\n\r\n//  const getData = async () => {\r\n//    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n//      headers: {\r\n//        Authorization: `Bearer ${token}`,\r\n//      },\r\n//    });\r\n//    const user = await res.json();\r\n//    setUser(user);\r\n//    // console.log(user)\r\n//  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <form\r\n          style={{\r\n            marginLeft: '30%',\r\n            height: ' 400px',\r\n            backgroundColor: ' \t#E0E0E0',\r\n          }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <h3>Update Profile</h3>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            placeholder='updated name'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            value={email}\r\n            placeholder='updated email'\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button type='submit' >Update</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default UpdateProfile","D:\\memories\\frontend\\src\\components\\UpdatePassword.jsx",["365","366"],[],"import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { updatePassword } from '../features/auth/authSlice';\r\nimport { useState } from 'react';\r\n import Header from './Header';\r\n import { Button } from '@mui/material';\r\n import { useNavigate } from 'react-router-dom';\r\nimport { logout } from '../features/auth/authSlice';\r\n\r\n\r\n\r\nconst UpdatePassword = () => {\r\n const [oldPassword,setOldPassword]=useState();\r\n const [newPassword,setNewPassword]=useState();\r\n const dispatch=useDispatch();\r\n const navigate= useNavigate();\r\n\r\n const submitHandler=async(e)=>{\r\ne.preventDefault();\r\nawait dispatch(updatePassword({oldPassword,newPassword}));\r\n\r\n//  navigate('/login');\r\n  dispatch(logout());\r\n }\r\n  return (\r\n    <div>\r\n      \r\n      <Header />\r\n      <div>\r\n        <form\r\n          style={{\r\n            marginLeft: '30%',\r\n            height: ' 400px',\r\n            backgroundColor: ' \t#E0E0E0',\r\n          }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <h3>Update Password</h3>\r\n          <input\r\n            type='password'\r\n            value={oldPassword}\r\n            placeholder='old password'\r\n            onChange={(e) => setOldPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type='password'\r\n            value={newPassword}\r\n            placeholder='New password'\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <Button type='submit'>Update password</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePassword","D:\\Memorify\\frontend\\src\\index.js",[],[],"D:\\Memorify\\frontend\\src\\App.js",["367","368"],[],"D:\\Memorify\\frontend\\src\\app\\store.js",[],[],"D:\\Memorify\\frontend\\src\\pages\\Dashboard.jsx",["369","370","371","372","373","374","375","376","377","378","379","380","381"],[],"import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostItem from '../components/PostItem';\r\nimport Header from '../components/Header'\r\nimport { reset } from '../features/auth/authSlice';\r\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\r\nimport { FaQuoteRight } from 'react-icons/fa';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport MyProfile from '../components/MyProfile';\r\nimport { Box, Card, Typography } from '@material-ui/core';\r\nimport { flexbox } from '@mui/system';\r\nimport { getUserFeed } from '../features/Posts/postSlice';\r\nimport {Grid} from '@material-ui/core'\r\nimport { getUser } from '../features/auth/authSlice';\r\n// import { getAllPerson } from '../features/auth/authSlice';\r\n// import { Container } from '@mui/material';\r\n\r\nimport UserItem from '../components/UserItem'\r\nimport FlexBetween from '../components/FlexBetween';\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // const [posts, setPosts] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [index,setIndex]=useState(0);\r\n  const {posts} = useSelector(\r\n    (state) => state.post\r\n  );\r\n  // console.log(posts.posts.length);\r\n   const isNonMobileScreens = useMediaQuery('(min-width:960px)');\r\n \r\n\r\n  // const userId = user._id;\r\n  const token = user.token;\r\n\r\n  useEffect(() => {\r\n\r\n     dispatch(getUserFeed());\r\n    // getUserFeed();\r\n    //  console.log(\" after dispatch of getuserfeed\");\r\n  \r\n    // dispatch(getUser())\r\n     getAllPerson();\r\n\r\n    //  .then((response)=>{\r\n    //     setPersons(response.data.users);\r\n    //     // console.log(response.data);\r\n\r\n    //  })\r\n    //  .catch((error)=>{\r\n    //   console.error(error);\r\n    //  })\r\n    // return () => {\r\n    //   dispatch(reset());\r\n    // };\r\n  }, [])\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const getUserFeed = async () => {\r\n  //   const res = await fetch(`http://localhost:5000/api/posts`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`,\r\n  //     },\r\n  //   });\r\n  //   const post = await res.json();\r\n\r\n  //   setPosts(post.posts);\r\n\r\n  //   console.log(post);\r\n  // };\r\n\r\n  const getAllPerson = async () => {\r\n\r\n    try{\r\n    const res = await fetch(`http://localhost:5000/api/users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const allUsers = await res.json();\r\n\r\n    // console.log(allUsers.users);\r\n    setPersons(allUsers.users);\r\n    \r\n    }\r\n    catch(error){\r\n  // console.error(error);\r\n  \r\n    }\r\n  };\r\n\r\n\r\n  \r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      {isNonMobileScreens ? (\r\n        <Box\r\n          sx={{\r\n            // width: '100vh',\r\n            padding: '2rem',\r\n            gap: '0.5rem',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            // bgcolor: 'red',\r\n          }}\r\n          // justifyContent= 'center'\r\n        >\r\n          {/* loggedin user profile */}\r\n          <Box sx={{ display: { xs: 'none', md: 'block' } }}>\r\n            {user ? (\r\n              <MyProfile key={user._id} userId={user._id} token={user.token} />\r\n            ) : null}\r\n          </Box>\r\n\r\n          {/*  form for post */}\r\n          <Box>\r\n            <PostForm />\r\n\r\n            {/*  feed area */}\r\n            <Box\r\n              sx={{\r\n                paddingTop: '3rem',\r\n              }}\r\n            >\r\n              {posts.posts && posts.posts.length > 0 ? (\r\n                <Box>\r\n                  {posts.posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>Follow people to see their Memories</Typography>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* avilable user to follow */}\r\n          <Box\r\n            sx={{\r\n              alignContent: 'center',\r\n\r\n              display: { xs: 'none', md: 'block' },\r\n            }}\r\n            className='suggestion-card'\r\n          >\r\n            {persons ? (\r\n              persons.length > 0 ? (\r\n                <Box\r\n                // sx={{ width: 300, height: 300 }}\r\n                >\r\n                  {persons.map((person) => (\r\n                    <UserItem key={person._id} person={person} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>Loading...</Typography>\r\n              )\r\n            ) : (\r\n              <Typography>no user available to follow</Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            // width: '100vh',\r\n            padding: '2rem',\r\n            gap: '0.5rem',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            // bgcolor: 'red',\r\n          }}\r\n          // justifyContent= 'center'\r\n        >\r\n          {/* loggedin user profile */}\r\n\r\n          {/*  form for post */}\r\n          <Box>\r\n            <PostForm />\r\n            <Box\r\n              sx={\r\n                {\r\n                  // bgcolor: 'green',\r\n                  //  display: { xs: 'none', md: 'block' }\r\n                }\r\n              }\r\n            >\r\n              {user ? (\r\n                <MyProfile\r\n                  key={user._id}\r\n                  userId={user._id}\r\n                  token={user.token}\r\n                />\r\n              ) : null}\r\n            </Box>\r\n            {/*  feed area */}\r\n            <Box\r\n              sx={{\r\n                paddingTop: '3rem',\r\n              }}\r\n            >\r\n              {posts.posts && posts.posts.length > 0 ? (\r\n                <Box>\r\n                  {posts.posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>You have not set any memories</Typography>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* avilable user to follow */}\r\n\r\n          <Box\r\n            sx={{\r\n              alignContent: 'center',\r\n              // bgcolor: 'orange',\r\n              // display: { xs: 'none', md: 'block' },\r\n            }}\r\n          >\r\n            {persons ? (\r\n              persons.length > 0 ? (\r\n                <Box\r\n                // sx={{ width: 300, height: 300 }}\r\n                >\r\n                  {persons.map((person) => (\r\n                    <UserItem key={person._id} person={person} />\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>no user available to follow</Typography>\r\n              )\r\n            ) : (\r\n              <Typography>Loading...</Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* <Box\r\n        sx={{\r\n          // width: '100vh',\r\n          padding: '2rem',\r\n          gap: '0.5rem',\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          \r\n        }}\r\n       \r\n      > */}\r\n      {/* loggedin user profile */}\r\n      {/* <Box sx={{ bgcolor: 'green', display: { xs: 'none', md: 'block' } }}>\r\n          {user ? (\r\n            <MyProfile key={user._id} userId={user._id} token={user.token} />\r\n          ) : null}\r\n        </Box> */}\r\n\r\n      {/*  form for post */}\r\n      {/* <Box>\r\n          <PostForm />\r\n\r\n          {/*  feed area */}\r\n      {/* <Box\r\n            sx={{\r\n              paddingTop: '3rem',\r\n            }}\r\n          >\r\n            {posts.posts && posts.posts.length > 0 ? (\r\n              <Box>\r\n                {posts.posts.map((post) => (\r\n                  <PostItem key={post._id} post={post} />\r\n                ))}\r\n              </Box>\r\n            ) : (\r\n              <Typography>You have not set any memories</Typography>\r\n            )}\r\n          </Box> */}\r\n      {/* </Box> */}\r\n\r\n      {/* avilable user to follow */}\r\n      {/* <Box\r\n          sx={{\r\n            alignContent: 'center',\r\n            bgcolor: 'orange',\r\n            display: { xs: 'none', md: 'block' },\r\n          }}\r\n        >\r\n          {persons ? (\r\n            persons.length > 0 ? (\r\n              <Box sx={{ width: 300, height: 300 }}>\r\n                {persons.map((person) => (\r\n                  <UserItem key={person._id} person={person} />\r\n                ))}\r\n              </Box>\r\n            ) : (\r\n              <Typography>no user available to follow</Typography>\r\n            )\r\n          ) : (\r\n            <Typography>Loading...</Typography>\r\n          )}\r\n        </Box> */}\r\n      {/* </Box> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n",[],"D:\\Memorify\\frontend\\src\\pages\\Main.jsx",["382","383"],[],"import React, { useEffect } from 'react'\r\nimport Dashboard from './Dashboard'\r\nimport Login from './Login'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Main() {\r\n const x = localStorage.getItem('user');\r\n const navigate = useNavigate()\r\n\r\n useEffect(()=>{\r\n  if(!x){\r\n navigate('/login');\r\n  }\r\n },[x])\r\n\r\n if(x){\r\nreturn <Dashboard />;\r\n }\r\n  \r\n \r\n}\r\n\r\nexport default Main","D:\\Memorify\\frontend\\src\\pages\\Login.jsx",[],[],"D:\\Memorify\\frontend\\src\\pages\\MyPosts.jsx",["384","385","386"],[],"D:\\Memorify\\frontend\\src\\pages\\Register.jsx",["387"],[],"D:\\Memorify\\frontend\\src\\components\\MyProfile.jsx",["388","389","390","391","392","393","394","395","396","397","398","399"],[],"import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport { useStyles } from './styling';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\r\nimport { getUser, updateProfile} from '../features/auth/authSlice';\r\nimport FlexBetween from './FlexBetween';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction MyProfile({userId,token}) {\r\n  const [user,setUser]=useState({name:'guest'});\r\n  // const { user } = useSelector((state) => state.auth);\r\n  // console.log(user.following);\r\n  const [followingCount, setFollowingCount] = useState(0)\r\n  \r\n  const [followerCount, setFollowerCount] = useState(\r\n    user.follower ? user.follower.length : 0\r\n  );\r\n\r\n  // const id=user._id;\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n  \r\n  useEffect(()=>{\r\n     getData()\r\n     \r\n       setFollowerCount(user.follower ? user.follower.length : 0);\r\n  },[])\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    // dispatch(getUser(id));\r\n    //   // setFollowingCount(user.following ? user.following.length : 0);\r\n    //   // setFollowerCount(user.follower ? user.follower.length : 0);\r\n    // }, [id,dispatch]);\r\n\r\n\r\n\r\n \r\n   const getData = async()=>{\r\n    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const user =await res.json()\r\n    setUser(user)\r\n    // console.log(user)\r\n   }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n//  console.log(followingCount);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        className={classes.userCard}\r\n        sx={{\r\n          height: 350,\r\n          width: 250,\r\n          // display: {\r\n          //   xs: 'none',\r\n          //   md:\"block\"\r\n          // },\r\n        }}\r\n      >\r\n        <CardMedia\r\n          sx={{\r\n            height: 75,\r\n            width: 75,\r\n            borderRadius: 100,\r\n            border: '1px solid grey',\r\n            mt: 1,\r\n          }}\r\n          component='img'\r\n          height='200'\r\n          image={user.profilePicture}\r\n          alt={user.name}\r\n        />\r\n        <CardContent>\r\n          <Typography>{user.name}</Typography>\r\n          <Typography>\r\n            <EmailOutlinedIcon />\r\n            {user.email}\r\n          </Typography>\r\n          <Typography>\r\n            \r\n            <LocationOnOutlinedIcon />\r\n            {user.location}\r\n          </Typography>\r\n          <Typography>\r\n         \r\n            <WorkOutlineOutlinedIcon />\r\n            {user.occupation}\r\n          </Typography>\r\n\r\n          {user && user.follower ? (\r\n            <Typography>\r\n              {' '}\r\n              Follower\r\n              {user.follower.length}\r\n            </Typography>\r\n          ) : (\r\n            <Typography>0 </Typography>\r\n          )}\r\n          {user && user.following ? (\r\n            <Typography> Following {user.following.length} </Typography>\r\n          ) : (\r\n            <Typography>0 </Typography>\r\n          )}\r\n          <Link to='/update/profile'>\r\n            <button>Update Profile</button>\r\n          </Link>\r\n          <Link to='/update/password'>\r\n            <button>Change Password</button>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","D:\\Memorify\\frontend\\src\\components\\UpdateProfile.jsx",["400","401","402"],[],"import React from 'react'\r\nimport Header from './Header'\r\nimport { useState,useEffect } from 'react'\r\nimport { useStyles } from './styling';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FileBase from 'react-file-base64';\r\nimport Button  from '@mui/material/Button'\r\nimport {  updateProfile } from '../features/auth/authSlice'\r\n// import Dashboard from '../pages/Dashboard'\r\nimport getUser from '../features/auth/authSlice'\r\n\r\nconst UpdateProfile = () => {\r\n  const classes = useStyles();\r\n// dispatch(getUser(user._id));\r\nconst{user}=useSelector((state)=>state.auth)\r\n// const [user, setUser] = useState({ name: 'guest' });\r\nconst dispatch = useDispatch();\r\n// console.log(\"this is user data before change\",user);\r\n// console.log(user);\r\n\r\n\r\nconst token =user.token;\r\n// console.log(token);\r\n const navigate = useNavigate();\r\n\r\n// const[name,setName]=useState(user? user.name:'');\r\n// const[email,setEmail]=useState(user?user.email:'');\r\n\r\nconst [name, setName] = useState(\"\");\r\nconst[email,setEmail]=useState(\"\");\r\nconst [location, setLocation] = useState('');\r\nconst [occupation, setOccupation] = useState('');\r\nconst[profilePicture,setProfilePicture]=useState('');\r\n// console.log(user._id);\r\n\r\n\r\n// useEffect(() => {\r\n//   dispatch(getUser(user._id));\r\n// }, [dispatch, user._id]);\r\n\r\n\r\nconst submitHandler=async(e)=>{\r\n e.preventDefault();\r\n  \r\n await dispatch(updateProfile( {name, email,location,occupation},token));\r\n    \r\n    //  setName('');\r\n    //  setEmail('');\r\n \r\n    // console.log(\" buttton clicked\")\r\n//  dispatch(getUser(user._id));\r\n\r\n  navigate('/');\r\n  \r\n}\r\n\r\n//  const getData = async () => {\r\n//    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n//      headers: {\r\n//        Authorization: `Bearer ${token}`,\r\n//      },\r\n//    });\r\n//    const user = await res.json();\r\n//    setUser(user);\r\n//    // console.log(user)\r\n//  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Header />\r\n      <div>\r\n        <form\r\n          style={{\r\n            marginLeft: '30%',\r\n            height: ' 400px',\r\n            backgroundColor: ' \t#E0E0E0',\r\n          }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <h3>Update Profile</h3>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            placeholder='updated name'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            value={email}\r\n            placeholder='updated email'\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            value={location}\r\n            placeholder='updated location'\r\n            onChange={(e) => setLocation(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            value={occupation}\r\n            placeholder='updated occupation'\r\n            onChange={(e) => setOccupation(e.target.value)}\r\n          />\r\n          <div className={classes.fileInput}>\r\n            <FileBase\r\n              type='file'\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setProfilePicture({ ...profilePicture, selectedFile: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <button type='submit'>Update</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default UpdateProfile","D:\\Memorify\\frontend\\src\\components\\UpdatePassword.jsx",["403"],[],"import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n// import { updatePassword } from '../features/auth/authSlice';\r\nimport { useState } from 'react';\r\n import Header from './Header';\r\n import { Button } from '@mui/material';\r\n import { useNavigate } from 'react-router-dom';\r\nimport { logout } from '../features/auth/authSlice';\r\n\r\n\r\n\r\nconst UpdatePassword = () => {\r\nconst{user}=useSelector((state)=>state.auth)\r\nconst token =user.token;\r\n const [oldPassword,setOldPassword]=useState();\r\n const [newPassword,setNewPassword]=useState();\r\n const dispatch=useDispatch();\r\n const navigate= useNavigate();\r\n\r\n\r\n\r\n const submitHandler=async(e)=>{\r\ne.preventDefault();\r\n\r\nawait dispatch(updatePasswordfunc(oldPassword, newPassword, token));\r\n\r\n  dispatch(logout());\r\n   navigate('/login');\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n const updatePasswordfunc = async (oldPassword, newPassword, token) => {\r\n   try {\r\n     const response = await fetch(\r\n       'http://localhost:5000/api/users/update/password',\r\n       {\r\n         method: 'PUT',\r\n         headers: {\r\n           'Content-Type': 'application/json',\r\n           Authorization: `Bearer ${token}`,\r\n         },\r\n         body: JSON.stringify({\r\n           oldPassword: oldPassword,\r\n           newPassword: newPassword,\r\n         }),\r\n       }\r\n     );\r\n\r\n     const data = await response.json();\r\n     console.log('Response from Backend:', data);\r\n\r\n     // Handle success or show a success message\r\n   } catch (error) {\r\n     console.error('Error in updatePassword:', error);\r\n\r\n     // Handle error or show an error message\r\n   }\r\n };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Header />\r\n      <div>\r\n        <form\r\n          style={{\r\n            marginLeft: '30%',\r\n            height: ' 400px',\r\n            backgroundColor: ' \t#E0E0E0',\r\n          }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <h3>Update Password</h3>\r\n          <input\r\n            type='password'\r\n            value={oldPassword}\r\n            placeholder='old password'\r\n            onChange={(e) => setOldPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type='password'\r\n            value={newPassword}\r\n            placeholder='New password'\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <button type='submit'>Update password</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePassword","D:\\Memorify\\frontend\\src\\features\\auth\\authSlice.js",[],[],"D:\\Memorify\\frontend\\src\\features\\Posts\\postSlice.js",["404","405","406","407","408","409","410"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport postService from './postService'\r\nconst API_URL = 'http://localhost:5000/api/posts';\r\nconst initialState={\r\n posts:[],\r\n isError:false,\r\n isSuccess:false,\r\n isLoading:false,\r\n\r\n}\r\n\r\n// create new post\r\n \r\nexport const createPost=createAsyncThunk('posts/create',async(postData,thunkAPI)=>{\r\n\r\n try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await postService.createPost(postData, token)\r\n      \r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n        }\r\n})\r\n\r\n// Get user Feed posts basically all following user post \r\n\r\nexport const getUserFeed = createAsyncThunk(\r\n  'posts/getUserFeed',\r\n  async (_,thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await postService.getUserFeed(token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Get post of  one user\r\n\r\nexport const getUserPosts = createAsyncThunk(\r\n  'posts/getOnlyUserPosts',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      return await postService.getUserPosts(id,token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\n// cooment on post \r\n\r\n// export const addComment = createAsyncThunk(\r\n//   'posts/addComment',\r\n//   async (id,value, thunkAPI) => {\r\n//     try {\r\n//       const token = thunkAPI.getState().auth.user.token;\r\n\r\n\r\n//       return await postService.addComment(id,value,token);\r\n     \r\n//     } catch (error) {\r\n//       const message =\r\n//         (error.response &&\r\n//           error.response.data &&\r\n//           error.response.data.message) ||\r\n//         error.message ||\r\n//         error.toString();\r\n//       return thunkAPI.rejectWithValue(message);\r\n//     }\r\n//   }\r\n// );\r\n\r\n\r\nexport const addComment = createAsyncThunk(\r\n  'posts/addComment',\r\n  async ({id, value}, thunkAPI) => {\r\n    // console.log(id);\r\n    // console.log(value);\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const response = await fetch(\r\n        API_URL+'/'+'comment'+'/'+`${id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ comment: value }),\r\n        }\r\n      );\r\n       \r\n const data = await response.json(); // Await\r\n//  console.log(data);\r\n return data;\r\n\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const deleteComment = createAsyncThunk(\r\n  'posts/deleteComment',\r\n  async ( {id, commentId},thunkAPI) => {\r\n    // console.log(id);\r\n    // console.log(value);\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const response = await fetch(\r\n         API_URL+'/'+'comment'+'/'+`${id}`,\r\n        {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({commentId:commentId}),\r\n        }\r\n      );\r\n\r\n      const data = await response.json(); // Await \r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Delete user post\r\nexport const deletePost = createAsyncThunk(\r\n  'post/delete',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await postService.deletePost(id, token)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// edit user post\r\nexport const editPost = createAsyncThunk(\r\n  'posts/editPost',\r\n  async ({ id, value }, thunkAPI) => {\r\n    // console.log(id);\r\n    // console.log(value);\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const response = await fetch(\r\n       API_URL+'/'+`${id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ title: value }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json(); // Await\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const postSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createPost.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.posts.push(action.payload);\r\n      })\r\n      .addCase(createPost.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n      .addCase(getUserFeed.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUserFeed.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(getUserFeed.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n      .addCase(getUserPosts.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUserPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(getUserPosts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n\r\n      \r\n      .addCase(addComment.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      .addCase(addComment.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n         state.posts.comment = action.payload.comment;\r\n       \r\n      })\r\n\r\n      .addCase(addComment.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n\r\n\r\n\r\n      .addCase(deleteComment.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      .addCase(deleteComment.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n\r\n       const{id,commentId}=action.payload;\r\n      \r\n           state.posts = state.posts.map((post) => {\r\n             if (post._id === id) {\r\n               post.comments = post.comments.filter(\r\n                 (comment) => comment._id !== commentId\r\n               );\r\n             }\r\n             return post;\r\n           });\r\n        \r\n\r\n          \r\n           \r\n         \r\n             \r\n           })\r\n      .addCase(deleteComment.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n      .addCase(deletePost.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n\r\n      .addCase(deletePost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.posts = state.posts.filter(\r\n          (post) => post._id !== action.payload.id\r\n        );\r\n      })\r\n      .addCase(deletePost.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n\r\n      .addCase(editPost.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(editPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.posts.title=action.payload.title;\r\n      })\r\n      .addCase(editPost.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\nexport  const {reset}=postSlice.actions\r\nexport default postSlice.reducer;","D:\\Memorify\\frontend\\src\\components\\styling.js",["411","412"],[],"import { makeStyles } from '@material-ui/core';\r\n// import { useTheme } from '@material-ui/styles';\r\nimport {  createTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { backdropClasses } from '@mui/material';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    '&.css-1ypec4v-MuiButtonBase-root-MuiButton-root': {\r\n      color: 'green',\r\n    },\r\n  },\r\n\r\n  form: {\r\n    backgroundColor: '#fff',\r\n    padding: '2rem',\r\n    borderRadius: '0.5rem',\r\n    boxShadow: ' 0px 0px 5px #ddd',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: '#EDE4FF',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  textField: {\r\n    padding: '0.5rem',\r\n  },\r\n\r\n}));\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n","D:\\Memorify\\frontend\\src\\components\\PostForm.jsx",["413","414","415","416","417","418","419","420"],[],"import  React from 'react';\r\nimport {useStyles }from './styling';\r\nimport  Typography  from '@mui/material/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch} from 'react-redux'\r\nimport Paper from '@mui/material/Paper';\r\nimport Card from '@mui/material/Card'\r\nimport TextField from '@mui/material/TextField';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\n// import CardHeader from '@mui/material/CardHeader';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport {createPost} from '../features/Posts/postSlice'\r\nimport{useState} from 'react'\r\nimport FlexBetween from './FlexBetween';\r\n\r\n\r\n\r\nfunction PostForm() {\r\n\r\nconst { user } = useSelector((state) => state.auth);\r\nconst classes=useStyles()\r\n\r\n   const [postData, setPostData] = useState({\r\n  \r\n  title:'',\r\n  message: '',\r\n  selectedFile:'',\r\n   location:'',\r\n   owner:''\r\n   });\r\n\r\n\r\nconst {  title, message, selectedFile,location,owner} =\r\n  postData;\r\n\r\nconst dispatch=useDispatch()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n\r\n\r\n\r\nconst handleSubmit=(e)=>{\r\n e.preventDefault();\r\n  // console.log(\"clicked submit button\")\r\nconst Data = {\r\n\r\n  title,\r\n  message,\r\n  owner:user.name,\r\n  selectedFile,\r\n  \r\n  location,\r\n};\r\n// console.log(Data);\r\n\r\n\r\n  dispatch(createPost(Data))\r\n  \r\n  setPostData({\r\n    \r\n    title: '',\r\n    message: '',\r\n    selectedFile: '',\r\n    location:'',\r\n    owner:\"\"\r\n  });\r\n};\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={` ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          name='title'\r\n          variant='outlined'\r\n          label='Caption'\r\n          fullWidth\r\n          multiline\r\n          value={postData.title}\r\n          className={classes.textField}\r\n          inputProps={classes.textField}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          name='message'\r\n          variant='outlined'\r\n          label='Message'\r\n          multiline\r\n          fullWidth\r\n          rows={1}\r\n          value={postData.message}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          name='location'\r\n          variant='outlined'\r\n          label='Location'\r\n          fullWidth\r\n          multiline\r\n          value={postData.location}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, location: e.target.value })\r\n          }\r\n        />\r\n\r\n        {/* <TextField\r\n          name='tags'\r\n          variant='outlined'\r\n          label='Tags (coma separated)'\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(',') })\r\n          }\r\n        /> */}\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type='file'\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        {/* <Button\r\n          className={classes.buttonSubmit}\r\n          variant='contained'\r\n          color='secondary'\r\n          size='large'\r\n          type='submit'\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button> */}\r\n        <button className='form-button'>submit</button>\r\n        {/* <Button\r\n          className={classes.buttonClear}\r\n          variant='contained'\r\n          color='secondary'\r\n          // size='small'\r\n          // onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button> */}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default PostForm\r\n\r\n\r\n\r\n","D:\\Memorify\\frontend\\src\\components\\PostItem.jsx",["421","422","423","424","425"],[],"import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Card from '@mui/material/Card';\r\nimport { Input, TextField } from '@material-ui/core';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { Typography } from '@material-ui/core';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getUserFeed } from '../features/Posts/postSlice';\r\nimport Box from '@mui/material/Box';\r\nimport {\r\n  ChatBubbleOutline,\r\n  Favorite,\r\n  FavoriteBorder,\r\n} from '@mui/icons-material';\r\n\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { deletePost } from '../features/Posts/postSlice';\r\nimport { editPost } from '../features/Posts/postSlice';\r\nimport { Button} from '@mui/material';\r\nimport { addComment } from '../features/Posts/postSlice';\r\n\r\n\r\nimport CommentCard from './CommentCard/CommentCard';\r\n\r\n\r\nexport default function PostItem({ post }) {\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n   const [owner,setOwner]=useState('');\r\n  const [liked, setLiked] = useState(post.likes.includes(user._id));\r\n  const [noOfLikes, setNo] = useState(post.likes.length);\r\n\r\n  const [commentValue, setCommentValue] = useState('');\r\n  const [commentToggle, setCommentToggle] = useState(false);\r\n\r\n  const[editCaption,setEditCaption]=useState('');\r\n\r\nconst [editCaptionToggle, setEditCaptionToggle] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = user._id;\r\n  const token = user.token;\r\n  // console.log(\"logged in user userId\")\r\n  // console.log(userId);\r\n  const postId = post._id;\r\n  // console.log(postId);\r\n  const handleLike = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/posts/${post._id}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          // credentials: 'include',\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setLiked(true);\r\n        setNo(noOfLikes + 1);\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n  const handleUnlike = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/posts/${post._id}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          //  credentials: 'include',\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setLiked(false);\r\n        setNo(noOfLikes - 1);\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  const addCommentHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(' post comments');\r\n    console.log(post.comments.length);\r\n    const commentData = {\r\n      id: postId, // Assuming postId is defined\r\n      value: commentValue, // Assuming commentValue is defined\r\n    };\r\n    //  console.log(commentData);\r\n    await dispatch(addComment(commentData));\r\n   \r\n    setCommentValue(''); // Clear the comment input field\r\n      //  setCommentToggle(false);\r\n    await dispatch(getUserFeed());\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  const editCaptionHandler = async(e) => {\r\n     e.preventDefault();\r\n    // console.log(\" post caption edited\");\r\n    const captionData={\r\n      id:postId,\r\n      value:editCaption,\r\n    }\r\n     await dispatch(editPost(captionData));\r\n     setEditCaption('');\r\n  };\r\n\r\n\r\n\r\n  const getUserData = async () => {\r\n\r\n\r\n  try {\r\n      const res = await fetch(`http://localhost:5000/api/users/${post.user}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (res.ok) {\r\n        const postOwner = await res.json();\r\n        setOwner(postOwner.name);\r\n      }\r\n  } catch (error) {\r\n     console.error('Error fetching owner details:', error);\r\n  }\r\n\r\n  };\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, [post.user, token]);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Card\r\n        sx={{\r\n          mb: '1vmax',\r\n          boxShadow: '3',\r\n        }}\r\n      >\r\n        <CardHeader title={post.title} subheader={owner} />\r\n        <Typography variant='subheader' color='text.secondary'>\r\n          {new Date(post.createdAt).toLocaleString()}\r\n        </Typography>\r\n\r\n        <Typography sx={{ fontSize: 14 }} color='text.secondary'>\r\n          {post.location}\r\n        </Typography>\r\n        <CardMedia\r\n          component='img'\r\n          sx={{ heigth: 100 }}\r\n          image={post.selectedFile}\r\n          alt={post.title}\r\n        />\r\n        <CardContent>\r\n          <Typography variant='body2' color='text.secondary'>\r\n            {post.message}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <div className='post-footer'>\r\n            {liked ? (\r\n              <Favorite style={{ color: 'red' }} onClick={handleUnlike} />\r\n            ) : (\r\n              <FavoriteBorder style={{ color: 'grey' }} onClick={handleLike} />\r\n            )}\r\n            <Typography>{noOfLikes}</Typography>\r\n          </div>\r\n\r\n          <div className='post-footer'>\r\n            \r\n            <ChatBubbleOutline\r\n              onClick={() => setCommentToggle(!commentToggle)}\r\n            />\r\n            <Typography>{post.comments.length}</Typography>\r\n          </div>\r\n\r\n          <Dialog\r\n            open={commentToggle}\r\n            onClose={() => setCommentToggle(!commentToggle)}\r\n          >\r\n            <div style={{ minwidth: 500, height: '100vh', padding: '2vmax' }}>\r\n              <Typography variant='h4'>Comments</Typography>\r\n              <form\r\n                // style={{ display: 'flex ', margin: '1vmax' }}\r\n                style={{\r\n                  backgroundColor: '#fff',\r\n                  padding: '2rem',\r\n                  borderRadius: '0.5rem',\r\n                  boxShadow: ' 0px 0px 5px #ddd',\r\n                  textAlign: 'center',\r\n                  width: '100%',\r\n                }}\r\n                onSubmit={addCommentHandler}\r\n              >\r\n                <TextField\r\n                  value={commentValue}\r\n                  onChange={(e) => setCommentValue(e.target.value)}\r\n                  placeholder='Comment Here...'\r\n                  required\r\n                />\r\n\r\n                <button type='submit' variant='contained'>\r\n                  Add\r\n                </button>\r\n              </form>\r\n\r\n              {post.comments && post.comments.length > 0 ? (\r\n                post.comments.map((item) => (\r\n                  // console.log(item.user)\r\n                  <CommentCard\r\n                    userId={item.user}\r\n                    // name={item.user.name}\r\n                    // profilePicture={item.user.profilePicture}\r\n                    comment={item.comment}\r\n                    commentId={item._id}\r\n                    key={item._id}\r\n                    postId={postId}\r\n                    // isAccount={isAccount}\r\n                    token={user.token}\r\n                    postUser={post.user}\r\n                    loggedInUser={user._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Typography>No comments Yet</Typography>\r\n              )}\r\n            </div>\r\n          </Dialog>\r\n\r\n          {/*  post's userid is same as login id then show delete otherwise dont  */}\r\n\r\n          {user._id === post.user ? (\r\n            <div className=\"post-footer\">\r\n              <DeleteIcon onClick={() => dispatch(deletePost(post._id))} />\r\n            </div>\r\n          ) : null}\r\n\r\n          {user._id === post.user ? (\r\n            <div className=\"post-footer\" >\r\n              <EditIcon\r\n                onClick={() => setEditCaptionToggle(!editCaptionToggle)}\r\n              />\r\n              <Dialog\r\n                open={editCaptionToggle}\r\n                onClose={() => setEditCaptionToggle(!editCaptionToggle)}\r\n              >\r\n                <div\r\n                  style={{ minwidth: 500, height: '100vh', padding: '2vmax' }}\r\n                >\r\n                  <Typography variant='h4'>Edit Caption </Typography>\r\n                  <form\r\n                    style={{\r\n                      backgroundColor: '#fff',\r\n                      padding: '2rem',\r\n                      borderRadius: '0.5rem',\r\n                      boxShadow: ' 0px 0px 5px #ddd',\r\n                      textAlign: 'center',\r\n                      width: '100%',\r\n                    }}\r\n                    onSubmit={editCaptionHandler}\r\n                  >\r\n                    <TextField\r\n                      value={editCaption}\r\n                      onChange={(e) => setEditCaption(e.target.value)}\r\n                      placeholder='Caption Here...'\r\n                      required\r\n                    />\r\n\r\n                    <Button type='submit' variant='contained'>\r\n                      Post\r\n                    </Button>\r\n                  </form>\r\n                  {/* \r\n              {post.comments && post.comments.length > 0 ? (\r\n                post.comments.map((item) => (\r\n                  // console.log(item.user)\r\n                  <CommentCard\r\n                    userId={item.user}\r\n                    // name={item.user.name}\r\n                    // profilePicture={item.user.profilePicture}\r\n                    comment={item.comment}\r\n                    commentId={item._id}\r\n                    key={item._id}\r\n                    postId={postId}\r\n                    // isAccount={isAccount}\r\n                    token={user.token}\r\n                    postUser={post.user}\r\n                    loggedInUser={user._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Typography>No comments Yet</Typography>\r\n              )} */}\r\n                </div>\r\n              </Dialog>\r\n            </div>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\Memorify\\frontend\\src\\components\\FlexBetween.jsx",[],[],"D:\\Memorify\\frontend\\src\\components\\Header.jsx",["426","427","428","429","430","431","432","433","434","435","436","437","438","439"],[],"\r\nimport * as React from 'react';\r\nimport {Link,useNavigate} from 'react-router-dom'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport { theme } from '../components/styling'\r\nimport { useStyles } from './styling';\r\nimport{useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// import Button from '@mui/material/Button';\r\n// import Select from '@mui/material/Select';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Close  from '@mui/icons-material/Close';\r\n// import  Menu  from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport FlexBetween from './FlexBetween'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport{logout,reset} from '../features/auth/authSlice'\r\nimport { useMediaQuery } from '@mui/material';\r\nimport { useSelect } from '@mui/base';\r\nimport { ThemeProvider, } from '@mui/material/styles';\r\nimport { green } from '@mui/material/colors';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Header() {\r\n\r\nconst classes = useStyles();\r\n\r\n const navigate=useNavigate()\r\n const dispatch=useDispatch()\r\n \r\n // from state we only want user so we use useselector \r\n const {user}=useSelector((state)=>state.auth);\r\n// const [mode, setMode] = useState([]);\r\n// const [isMobileMenuToggled,setIsMobileMenuToggled]=useState(false);\r\n const isNonMobileScreens=useMediaQuery(\"(min-width:960px)\");\r\nconst onLogout=()=>{\r\n  // console.log(\" clicked on logout button\")\r\n  dispatch(logout())\r\n  // dispatch(reset())\r\n  navigate('/login')\r\n}\r\n\r\n\r\n const [anchorel, setAnchorel] = useState(null);\r\n const open = Boolean(anchorel);\r\n const handleClick = (event) => {\r\n   setAnchorel(event.currentTarget);\r\n };\r\n const handleClose = () => {\r\n   setAnchorel(null);\r\n };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={`${classes.header}`}>\r\n      {/* <FlexBetween gap='1.75rem'> */}\r\n      <Typography\r\n        // //  fontSize='clamp(1rem,2rem,2.25rem)'\r\n\r\n        style={{\r\n          fontFamily: 'Amatic SC',\r\n          fontWeight: 'bold',\r\n          fontSize: '2.8rem',\r\n          paddingLeft: '1rem',\r\n        }}\r\n      >\r\n        <Link to='/' style={{ textDecoration: 'none' }}>\r\n          Memorify\r\n        </Link>\r\n      </Typography>\r\n      {/* </FlexBetween> */}\r\n\r\n      {/* desktop version  */}\r\n      {isNonMobileScreens ? (\r\n        <div>\r\n          {user ? (\r\n            <>\r\n              <Link to='/MyPosts' style={{ textDecoration: 'none' }}>\r\n                My Post\r\n              </Link>\r\n              <button sx={{ mr: 2 }} onClick={onLogout}>\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to='/Register' style={{ textDecoration: 'none' }}>\r\n                Register\r\n              </Link>\r\n              <Link to='/Login' style={{ textDecoration: 'none' }}>\r\n                Login\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        // <IconButton\r\n        //   onClick={() => setIsMobileMenuToggled(!isMobileMenuToggled)}\r\n        // >\r\n        //   <Menu />\r\n        // </IconButton>\r\n\r\n        <>\r\n          <button\r\n            id='demo-positioned-button'\r\n            aria-controls={open ? 'demo-positioned-menu' : undefined}\r\n            aria-haspopup='true'\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </button>\r\n          <Menu\r\n            id='demo-positioned-menu'\r\n            aria-labelledby='demo-positioned-button'\r\n            anchorel={anchorel}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n          >\r\n            <MenuItem component='a' href='/MyProfile'>\r\n              Profile\r\n            </MenuItem>\r\n\r\n            <MenuItem component='a' href='/MyPosts'>\r\n              My Posts\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={onLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </>\r\n      )}\r\n\r\n      \r\n    </div>\r\n  );\r\n}","D:\\Memorify\\frontend\\src\\components\\UserItem.jsx",["440","441","442","443","444","445","446","447","448"],[],"import { Card } from '@mui/material'\r\nimport { Button, CardHeader } from '@material-ui/core';\r\nimport{ Box} from '@mui/material';\r\nimport {Typography} from '@material-ui/core';\r\nimport {Paper} from '@material-ui/core';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n// import { ThemeProvider } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\nimport FlexBetween from './FlexBetween';\r\nimport WidgetWrapper from './WidgetWrapper'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction UserItem({person}) \r\n\r\n\r\n{\r\n const { user } = useSelector((state) => state.auth);\r\n \r\n  const token = user.token;\r\n  // console.log(user._id);\r\n\r\n \r\nconst [isFollowing, setIsFollowing] = useState(false);\r\nconst [buttonLabel,setButtonLabel]=useState(\"Follow\");\r\n\r\n\r\n  \r\n  \r\n\r\n   const TofollowUser=async()=>{\r\n    const res = await fetch(\r\n      `http://localhost:5000/api/users/follow/${person._id}`,\r\n      { method:'PUT',\r\n        headers: {\r\n          Accept:'application/json',\r\n         'Content-Type':'application/json',\r\n         Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n      const data=await res.json();\r\n      // console.log(data);\r\n      setIsFollowing(true);\r\n      setButtonLabel('Unfollow');\r\n     \r\n   }\r\n const ToUnfollowUser = async () => {\r\n   const res = await fetch(\r\n     `http://localhost:5000/api/users/unfollow/${person._id}`,\r\n     {\r\n       method: 'PUT',\r\n       headers: {\r\n         Accept: 'application/json',\r\n         'Content-Type': 'application/json',\r\n         Authorization: `Bearer ${token}`,\r\n       },\r\n     }\r\n   );\r\n   const data = await res.json();\r\n  //  console.log(data);\r\n   setIsFollowing(false);\r\n    setButtonLabel('Follow');\r\n };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n \r\n\r\n   if(person.follower.includes(  JSON.parse(localStorage.getItem(\"user\"))._id)){\r\n    setIsFollowing(true);\r\n    setButtonLabel('Unfollow')\r\n   }\r\n   else{\r\n     setIsFollowing(false);\r\n      setButtonLabel('Follow');\r\n   }\r\n  },[setIsFollowing.person])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          pl: '2rem',\r\n          pr: '2rem',\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          // backgroundColor: '#E5BEEC',\r\n          // alignItems: 'center',\r\n          borderRadius: '5px',\r\n          mb: '2vmax',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            pb: '0.5rem',\r\n            display: 'flex',\r\n            // bgcolor: 'grey',\r\n            // width: '2rem',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <CardMedia\r\n            sx={{\r\n              height: 50,\r\n              width: 50,\r\n              borderRadius: 100,\r\n\r\n              border: '1px solid grey',\r\n              mt: 1,\r\n            }}\r\n            component='img'\r\n            // height='50'\r\n            image={person.profilePicture}\r\n            alt={person.name}\r\n          />\r\n\r\n          <Typography variant='h6' sx={{ ml: '1rem' }}>\r\n            {person.name}\r\n          </Typography>\r\n\r\n          <Typography>{person.location}</Typography>\r\n\r\n          <button\r\n            variant='contained'\r\n            onClick={() => {\r\n              if (isFollowing) {\r\n                ToUnfollowUser();\r\n              } else {\r\n                TofollowUser();\r\n              }\r\n            }}\r\n          >\r\n            {buttonLabel}\r\n          </button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserItem","D:\\Memorify\\frontend\\src\\features\\auth\\authService.js",[],[],"D:\\Memorify\\frontend\\src\\features\\Posts\\postService.js",["449","450"],[],"import axios from 'axios';\r\n// const API_URL='/api/posts';\r\nconst API_URL = 'http://localhost:5000/api/posts';\r\n// create new post\r\n\r\nconst createPost=async(postData,token)=>{\r\n const config = {\r\n   headers: {\r\n     Authorization: `Bearer ${token}`,\r\n   },\r\n };\r\n  const response = await axios.post(API_URL, postData, config);\r\n  // console.log('data posted');\r\n  return response.data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const createPost = async (postData, token) => {\r\n//   const config = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(postData),\r\n//   };\r\n\r\n//   try {\r\n//     const response = await fetch(API_URL, config);\r\n//     console.log('data posted');\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getUserFeed = async (token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL, config);\r\n  // console.log(' getFeedpost is working');\r\n  // console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst getUserPosts = async (userId,token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL + '/' + `${userId}`+ '/posts', config);\r\n  // console.log(' getUserpost is working');\r\n  // console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst deletePost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.delete(API_URL +'/'+postId, config);\r\n  // console.log(response);\r\n  // console.log(' post is deleted');\r\n  return response.data;\r\n};\r\n\r\n// const editPost = async (postId,editCaption, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   };\r\n//  const captionData={\r\n//   value:editCaption,\r\n//  }\r\n//   const response = await axios.put(API_URL + '/' + `${postId}`, captionData,config);\r\n//   console.log(response);\r\n//   return response.data;\r\n// };\r\n\r\n// const addComment = async (postId,commentValue, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//       'Content-Type':'application/json'\r\n//     },\r\n//   };\r\n//  const postData = {\r\n//    value: commentValue,\r\n//  };\r\n\r\n//   const response = await axios.put(API_URL + '/'+'comment' + '/'+`${postId}` ,postData,config);\r\n//   console.log(response);\r\n//    console.log(' comment added');\r\n//   return response.data;\r\n// };\r\n\r\n\r\n\r\nconst postService = {\r\n  createPost,\r\n  getUserFeed,\r\n  getUserPosts,\r\n  deletePost,\r\n\r\n};\r\n\r\nexport default postService;",[],"D:\\Memorify\\frontend\\src\\components\\WidgetWrapper.jsx",[],[],"D:\\Memorify\\frontend\\src\\components\\CommentCard\\CommentCard.jsx",["451","452","453","454"],[],"import { Button, Typography } from '@mui/material';\r\nimport React,{useState,useEffect}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommentCard.css';\r\n// import { Delete } from '@mui/icons-material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserFeed } from '../../features/Posts/postSlice';\r\n// import { deleteCommentOnPost } from '../../Actions/Post';\r\n// import { getFollowingPosts, getMyPosts } from '../../Actions/User';\r\n// import getFollowingPosts from '.';\r\nimport { deleteComment } from '../../features/Posts/postSlice';\r\n const API_USER = 'http://localhost:5000/api/users';\r\nconst CommentCard = ({\r\n  userId, // the person who commented\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  token,\r\n  postUser,\r\n  loggedInUser,\r\n}) => {\r\n  const [userInComment, setUserInComment] = useState(null);\r\n  // const { user } = useSelector((state) => state.user);\r\n  // const token=user.token;\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCommentHandle = async () => {\r\n    // console.log(\" delete button clicked\");\r\n    const commentData={\r\n      id:postId,\r\n      commentId:commentId,\r\n    }\r\n\r\n  dispatch(deleteComment(commentData));\r\n  dispatch(getUserFeed());\r\n   window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(userId);\r\n   \r\n  }, [userId, token]);\r\n\r\n  const getData = async () => {\r\n    const res = await fetch(\r\n      API_USER+'/'+`${userId}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    const user = await res.json();\r\n    setUserInComment(user);\r\n \r\n  };\r\n\r\n  if (!userInComment) {\r\n    // User data is loading or not available yet\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // console.log(userId);\r\n  return (\r\n    <div className='commentUser'>\r\n      <img src={userInComment.profilePicture} alt={userInComment.name} />\r\n      <Typography\r\n        style={{ minWidth: '6vmax', fontWeight: 'bold', color: 'black' }}\r\n      >\r\n        {userInComment.name}\r\n      </Typography>\r\n\r\n      <Typography>{comment}</Typography>\r\n      {loggedInUser === userId ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      ) : loggedInUser === postUser ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n",{"ruleId":"455","severity":1,"message":"456","line":5,"column":8,"nodeType":"457","messageId":"458","endLine":5,"endColumn":17},{"ruleId":"455","severity":1,"message":"459","line":9,"column":8,"nodeType":"457","messageId":"458","endLine":9,"endColumn":17},{"ruleId":"455","severity":1,"message":"460","line":7,"column":10,"nodeType":"457","messageId":"458","endLine":7,"endColumn":15},{"ruleId":"455","severity":1,"message":"461","line":8,"column":10,"nodeType":"457","messageId":"458","endLine":8,"endColumn":24},{"ruleId":"455","severity":1,"message":"462","line":8,"column":26,"nodeType":"457","messageId":"458","endLine":8,"endColumn":39},{"ruleId":"455","severity":1,"message":"463","line":9,"column":10,"nodeType":"457","messageId":"458","endLine":9,"endColumn":22},{"ruleId":"455","severity":1,"message":"464","line":12,"column":15,"nodeType":"457","messageId":"458","endLine":12,"endColumn":19},{"ruleId":"455","severity":1,"message":"465","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":17},{"ruleId":"455","severity":1,"message":"466","line":15,"column":9,"nodeType":"457","messageId":"458","endLine":15,"endColumn":13},{"ruleId":"455","severity":1,"message":"467","line":16,"column":10,"nodeType":"457","messageId":"458","endLine":16,"endColumn":17},{"ruleId":"455","severity":1,"message":"468","line":21,"column":8,"nodeType":"457","messageId":"458","endLine":21,"endColumn":19},{"ruleId":"455","severity":1,"message":"469","line":23,"column":9,"nodeType":"457","messageId":"458","endLine":23,"endColumn":17},{"ruleId":"455","severity":1,"message":"470","line":30,"column":10,"nodeType":"457","messageId":"458","endLine":30,"endColumn":15},{"ruleId":"455","severity":1,"message":"471","line":30,"column":16,"nodeType":"457","messageId":"458","endLine":30,"endColumn":24},{"ruleId":"472","severity":1,"message":"473","line":61,"column":6,"nodeType":"474","endLine":61,"endColumn":8,"suggestions":"475"},{"ruleId":"455","severity":1,"message":"476","line":28,"column":15,"nodeType":"457","messageId":"458","endLine":28,"endColumn":24},{"ruleId":"455","severity":1,"message":"477","line":157,"column":11,"nodeType":"457","messageId":"458","endLine":157,"endColumn":15},{"ruleId":"478","severity":1,"message":"479","line":70,"column":50,"nodeType":"480","messageId":"481","endLine":70,"endColumn":51},{"ruleId":"478","severity":1,"message":"479","line":70,"column":63,"nodeType":"480","messageId":"481","endLine":70,"endColumn":64},{"ruleId":"455","severity":1,"message":"482","line":3,"column":9,"nodeType":"457","messageId":"458","endLine":3,"endColumn":19},{"ruleId":"455","severity":1,"message":"483","line":7,"column":8,"nodeType":"457","messageId":"458","endLine":7,"endColumn":13},{"ruleId":"455","severity":1,"message":"464","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":12},{"ruleId":"455","severity":1,"message":"484","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":13},{"ruleId":"455","severity":1,"message":"485","line":13,"column":15,"nodeType":"457","messageId":"458","endLine":13,"endColumn":24},{"ruleId":"455","severity":1,"message":"468","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":19},{"ruleId":"455","severity":1,"message":"486","line":3,"column":10,"nodeType":"457","messageId":"458","endLine":3,"endColumn":23},{"ruleId":"455","severity":1,"message":"487","line":4,"column":8,"nodeType":"457","messageId":"458","endLine":4,"endColumn":21},{"ruleId":"455","severity":1,"message":"488","line":2,"column":8,"nodeType":"457","messageId":"458","endLine":2,"endColumn":13},{"ruleId":"455","severity":1,"message":"489","line":3,"column":20,"nodeType":"457","messageId":"458","endLine":3,"endColumn":29},{"ruleId":"455","severity":1,"message":"490","line":6,"column":10,"nodeType":"457","messageId":"458","endLine":6,"endColumn":15},{"ruleId":"455","severity":1,"message":"491","line":59,"column":9,"nodeType":"457","messageId":"458","endLine":59,"endColumn":15},{"ruleId":"455","severity":1,"message":"492","line":4,"column":8,"nodeType":"457","messageId":"458","endLine":4,"endColumn":14},{"ruleId":"455","severity":1,"message":"493","line":5,"column":10,"nodeType":"457","messageId":"458","endLine":5,"endColumn":15},{"ruleId":"455","severity":1,"message":"484","line":7,"column":8,"nodeType":"457","messageId":"458","endLine":7,"endColumn":11},{"ruleId":"455","severity":1,"message":"494","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":15},{"ruleId":"455","severity":1,"message":"495","line":14,"column":8,"nodeType":"457","messageId":"458","endLine":14,"endColumn":18},{"ruleId":"455","severity":1,"message":"496","line":15,"column":8,"nodeType":"457","messageId":"458","endLine":15,"endColumn":17},{"ruleId":"455","severity":1,"message":"497","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":19},{"ruleId":"455","severity":1,"message":"498","line":17,"column":8,"nodeType":"457","messageId":"458","endLine":17,"endColumn":13},{"ruleId":"455","severity":1,"message":"460","line":22,"column":15,"nodeType":"457","messageId":"458","endLine":22,"endColumn":20},{"ruleId":"455","severity":1,"message":"499","line":24,"column":10,"nodeType":"457","messageId":"458","endLine":24,"endColumn":19},{"ruleId":"455","severity":1,"message":"486","line":25,"column":10,"nodeType":"457","messageId":"458","endLine":25,"endColumn":23},{"ruleId":"455","severity":1,"message":"500","line":26,"column":10,"nodeType":"457","messageId":"458","endLine":26,"endColumn":15},{"ruleId":"455","severity":1,"message":"501","line":27,"column":8,"nodeType":"457","messageId":"458","endLine":27,"endColumn":14},{"ruleId":"455","severity":1,"message":"502","line":4,"column":10,"nodeType":"457","messageId":"458","endLine":4,"endColumn":19},{"ruleId":"455","severity":1,"message":"503","line":6,"column":8,"nodeType":"457","messageId":"458","endLine":6,"endColumn":14},{"ruleId":"455","severity":1,"message":"504","line":7,"column":23,"nodeType":"457","messageId":"458","endLine":7,"endColumn":34},{"ruleId":"455","severity":1,"message":"467","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":17},{"ruleId":"455","severity":1,"message":"505","line":13,"column":19,"nodeType":"457","messageId":"458","endLine":13,"endColumn":32},{"ruleId":"455","severity":1,"message":"468","line":14,"column":8,"nodeType":"457","messageId":"458","endLine":14,"endColumn":19},{"ruleId":"455","severity":1,"message":"484","line":15,"column":10,"nodeType":"457","messageId":"458","endLine":15,"endColumn":13},{"ruleId":"455","severity":1,"message":"506","line":24,"column":10,"nodeType":"457","messageId":"458","endLine":24,"endColumn":24},{"ruleId":"455","severity":1,"message":"507","line":24,"column":26,"nodeType":"457","messageId":"458","endLine":24,"endColumn":43},{"ruleId":"455","severity":1,"message":"508","line":26,"column":10,"nodeType":"457","messageId":"458","endLine":26,"endColumn":23},{"ruleId":"455","severity":1,"message":"509","line":37,"column":9,"nodeType":"457","messageId":"458","endLine":37,"endColumn":17},{"ruleId":"472","severity":1,"message":"510","line":44,"column":5,"nodeType":"474","endLine":44,"endColumn":7,"suggestions":"511"},{"ruleId":"455","severity":1,"message":"512","line":1,"column":25,"nodeType":"457","messageId":"458","endLine":1,"endColumn":33},{"ruleId":"455","severity":1,"message":"469","line":12,"column":9,"nodeType":"457","messageId":"458","endLine":12,"endColumn":17},{"ruleId":"472","severity":1,"message":"513","line":24,"column":5,"nodeType":"474","endLine":24,"endColumn":20,"suggestions":"514"},{"ruleId":"455","severity":1,"message":"464","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"515","line":2,"column":18,"nodeType":"457","messageId":"458","endLine":2,"endColumn":28},{"ruleId":"455","severity":1,"message":"483","line":5,"column":9,"nodeType":"457","messageId":"458","endLine":5,"endColumn":14},{"ruleId":"455","severity":1,"message":"468","line":11,"column":8,"nodeType":"457","messageId":"458","endLine":11,"endColumn":19},{"ruleId":"455","severity":1,"message":"516","line":12,"column":8,"nodeType":"457","messageId":"458","endLine":12,"endColumn":21},{"ruleId":"455","severity":1,"message":"477","line":47,"column":13,"nodeType":"457","messageId":"458","endLine":47,"endColumn":17},{"ruleId":"455","severity":1,"message":"477","line":65,"column":10,"nodeType":"457","messageId":"458","endLine":65,"endColumn":14},{"ruleId":"472","severity":1,"message":"517","line":90,"column":5,"nodeType":"474","endLine":90,"endColumn":28,"suggestions":"518"},{"ruleId":"455","severity":1,"message":"519","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":16},{"ruleId":"455","severity":1,"message":"482","line":1,"column":18,"nodeType":"457","messageId":"458","endLine":1,"endColumn":28},{"ruleId":"455","severity":1,"message":"520","line":57,"column":10,"nodeType":"457","messageId":"458","endLine":57,"endColumn":14},{"ruleId":"455","severity":1,"message":"509","line":58,"column":9,"nodeType":"457","messageId":"458","endLine":58,"endColumn":17},{"ruleId":"455","severity":1,"message":"519","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":16},{"ruleId":"455","severity":1,"message":"482","line":1,"column":18,"nodeType":"457","messageId":"458","endLine":1,"endColumn":28},{"ruleId":"455","severity":1,"message":"520","line":57,"column":10,"nodeType":"457","messageId":"458","endLine":57,"endColumn":14},{"ruleId":"455","severity":1,"message":"509","line":58,"column":9,"nodeType":"457","messageId":"458","endLine":58,"endColumn":17},{"ruleId":"455","severity":1,"message":"521","line":3,"column":10,"nodeType":"457","messageId":"458","endLine":3,"endColumn":14},{"ruleId":"455","severity":1,"message":"504","line":7,"column":23,"nodeType":"457","messageId":"458","endLine":7,"endColumn":34},{"ruleId":"472","severity":1,"message":"522","line":42,"column":6,"nodeType":"474","endLine":42,"endColumn":21,"suggestions":"523"},{"ruleId":"455","severity":1,"message":"489","line":3,"column":19,"nodeType":"457","messageId":"458","endLine":3,"endColumn":28},{"ruleId":"455","severity":1,"message":"467","line":9,"column":8,"nodeType":"457","messageId":"458","endLine":9,"endColumn":15},{"ruleId":"455","severity":1,"message":"504","line":2,"column":21,"nodeType":"457","messageId":"458","endLine":2,"endColumn":32},{"ruleId":"455","severity":1,"message":"469","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":16},{"ruleId":"455","severity":1,"message":"456","line":5,"column":8,"nodeType":"457","messageId":"458","endLine":5,"endColumn":17},{"ruleId":"455","severity":1,"message":"459","line":9,"column":8,"nodeType":"457","messageId":"458","endLine":9,"endColumn":17},{"ruleId":"455","severity":1,"message":"460","line":7,"column":10,"nodeType":"457","messageId":"458","endLine":7,"endColumn":15},{"ruleId":"455","severity":1,"message":"461","line":8,"column":10,"nodeType":"457","messageId":"458","endLine":8,"endColumn":24},{"ruleId":"455","severity":1,"message":"462","line":8,"column":26,"nodeType":"457","messageId":"458","endLine":8,"endColumn":39},{"ruleId":"455","severity":1,"message":"463","line":9,"column":10,"nodeType":"457","messageId":"458","endLine":9,"endColumn":22},{"ruleId":"455","severity":1,"message":"464","line":12,"column":15,"nodeType":"457","messageId":"458","endLine":12,"endColumn":19},{"ruleId":"455","severity":1,"message":"465","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":17},{"ruleId":"455","severity":1,"message":"466","line":15,"column":9,"nodeType":"457","messageId":"458","endLine":15,"endColumn":13},{"ruleId":"455","severity":1,"message":"467","line":16,"column":10,"nodeType":"457","messageId":"458","endLine":16,"endColumn":17},{"ruleId":"455","severity":1,"message":"468","line":21,"column":8,"nodeType":"457","messageId":"458","endLine":21,"endColumn":19},{"ruleId":"455","severity":1,"message":"469","line":23,"column":9,"nodeType":"457","messageId":"458","endLine":23,"endColumn":17},{"ruleId":"455","severity":1,"message":"470","line":30,"column":10,"nodeType":"457","messageId":"458","endLine":30,"endColumn":15},{"ruleId":"455","severity":1,"message":"471","line":30,"column":16,"nodeType":"457","messageId":"458","endLine":30,"endColumn":24},{"ruleId":"472","severity":1,"message":"473","line":61,"column":6,"nodeType":"474","endLine":61,"endColumn":8,"suggestions":"524"},{"ruleId":"455","severity":1,"message":"525","line":3,"column":8,"nodeType":"457","messageId":"458","endLine":3,"endColumn":13},{"ruleId":"472","severity":1,"message":"526","line":14,"column":4,"nodeType":"474","endLine":14,"endColumn":7,"suggestions":"527"},{"ruleId":"455","severity":1,"message":"512","line":1,"column":25,"nodeType":"457","messageId":"458","endLine":1,"endColumn":33},{"ruleId":"455","severity":1,"message":"469","line":12,"column":9,"nodeType":"457","messageId":"458","endLine":12,"endColumn":17},{"ruleId":"472","severity":1,"message":"513","line":24,"column":5,"nodeType":"474","endLine":24,"endColumn":20,"suggestions":"528"},{"ruleId":"455","severity":1,"message":"476","line":28,"column":15,"nodeType":"457","messageId":"458","endLine":28,"endColumn":24},{"ruleId":"455","severity":1,"message":"502","line":4,"column":10,"nodeType":"457","messageId":"458","endLine":4,"endColumn":19},{"ruleId":"455","severity":1,"message":"503","line":6,"column":8,"nodeType":"457","messageId":"458","endLine":6,"endColumn":14},{"ruleId":"455","severity":1,"message":"504","line":7,"column":23,"nodeType":"457","messageId":"458","endLine":7,"endColumn":34},{"ruleId":"455","severity":1,"message":"467","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":17},{"ruleId":"455","severity":1,"message":"505","line":13,"column":19,"nodeType":"457","messageId":"458","endLine":13,"endColumn":32},{"ruleId":"455","severity":1,"message":"468","line":14,"column":8,"nodeType":"457","messageId":"458","endLine":14,"endColumn":19},{"ruleId":"455","severity":1,"message":"484","line":15,"column":10,"nodeType":"457","messageId":"458","endLine":15,"endColumn":13},{"ruleId":"455","severity":1,"message":"506","line":25,"column":10,"nodeType":"457","messageId":"458","endLine":25,"endColumn":24},{"ruleId":"455","severity":1,"message":"507","line":25,"column":26,"nodeType":"457","messageId":"458","endLine":25,"endColumn":43},{"ruleId":"455","severity":1,"message":"508","line":27,"column":10,"nodeType":"457","messageId":"458","endLine":27,"endColumn":23},{"ruleId":"455","severity":1,"message":"509","line":38,"column":9,"nodeType":"457","messageId":"458","endLine":38,"endColumn":17},{"ruleId":"472","severity":1,"message":"510","line":45,"column":5,"nodeType":"474","endLine":45,"endColumn":7,"suggestions":"529"},{"ruleId":"455","severity":1,"message":"489","line":3,"column":19,"nodeType":"457","messageId":"458","endLine":3,"endColumn":28},{"ruleId":"455","severity":1,"message":"519","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":14},{"ruleId":"455","severity":1,"message":"467","line":11,"column":8,"nodeType":"457","messageId":"458","endLine":11,"endColumn":15},{"ruleId":"455","severity":1,"message":"519","line":6,"column":11,"nodeType":"457","messageId":"458","endLine":6,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":113,"column":20,"nodeType":"480","messageId":"481","endLine":113,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":113,"column":30,"nodeType":"480","messageId":"481","endLine":113,"endColumn":31},{"ruleId":"478","severity":1,"message":"479","line":113,"column":34,"nodeType":"480","messageId":"481","endLine":113,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":150,"column":21,"nodeType":"480","messageId":"481","endLine":150,"endColumn":22},{"ruleId":"478","severity":1,"message":"479","line":150,"column":31,"nodeType":"480","messageId":"481","endLine":150,"endColumn":32},{"ruleId":"478","severity":1,"message":"479","line":150,"column":35,"nodeType":"480","messageId":"481","endLine":150,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":216,"column":19,"nodeType":"480","messageId":"481","endLine":216,"endColumn":20},{"ruleId":"455","severity":1,"message":"487","line":4,"column":8,"nodeType":"457","messageId":"458","endLine":4,"endColumn":21},{"ruleId":"455","severity":1,"message":"530","line":5,"column":10,"nodeType":"457","messageId":"458","endLine":5,"endColumn":25},{"ruleId":"455","severity":1,"message":"482","line":3,"column":9,"nodeType":"457","messageId":"458","endLine":3,"endColumn":19},{"ruleId":"455","severity":1,"message":"483","line":7,"column":8,"nodeType":"457","messageId":"458","endLine":7,"endColumn":13},{"ruleId":"455","severity":1,"message":"464","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":12},{"ruleId":"455","severity":1,"message":"519","line":11,"column":8,"nodeType":"457","messageId":"458","endLine":11,"endColumn":14},{"ruleId":"455","severity":1,"message":"484","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":13},{"ruleId":"455","severity":1,"message":"485","line":13,"column":15,"nodeType":"457","messageId":"458","endLine":13,"endColumn":24},{"ruleId":"455","severity":1,"message":"468","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":19},{"ruleId":"455","severity":1,"message":"531","line":35,"column":48,"nodeType":"457","messageId":"458","endLine":35,"endColumn":53},{"ruleId":"455","severity":1,"message":"488","line":2,"column":8,"nodeType":"457","messageId":"458","endLine":2,"endColumn":13},{"ruleId":"455","severity":1,"message":"490","line":6,"column":10,"nodeType":"457","messageId":"458","endLine":6,"endColumn":15},{"ruleId":"455","severity":1,"message":"495","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":20},{"ruleId":"455","severity":1,"message":"491","line":50,"column":9,"nodeType":"457","messageId":"458","endLine":50,"endColumn":15},{"ruleId":"472","severity":1,"message":"532","line":158,"column":6,"nodeType":"474","endLine":158,"endColumn":24,"suggestions":"533"},{"ruleId":"455","severity":1,"message":"492","line":4,"column":8,"nodeType":"457","messageId":"458","endLine":4,"endColumn":14},{"ruleId":"455","severity":1,"message":"493","line":5,"column":10,"nodeType":"457","messageId":"458","endLine":5,"endColumn":15},{"ruleId":"455","severity":1,"message":"484","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":11},{"ruleId":"455","severity":1,"message":"494","line":9,"column":8,"nodeType":"457","messageId":"458","endLine":9,"endColumn":15},{"ruleId":"455","severity":1,"message":"495","line":15,"column":8,"nodeType":"457","messageId":"458","endLine":15,"endColumn":18},{"ruleId":"455","severity":1,"message":"496","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":17},{"ruleId":"455","severity":1,"message":"497","line":17,"column":8,"nodeType":"457","messageId":"458","endLine":17,"endColumn":19},{"ruleId":"455","severity":1,"message":"498","line":18,"column":8,"nodeType":"457","messageId":"458","endLine":18,"endColumn":13},{"ruleId":"455","severity":1,"message":"468","line":21,"column":8,"nodeType":"457","messageId":"458","endLine":21,"endColumn":19},{"ruleId":"455","severity":1,"message":"460","line":23,"column":15,"nodeType":"457","messageId":"458","endLine":23,"endColumn":20},{"ruleId":"455","severity":1,"message":"499","line":25,"column":10,"nodeType":"457","messageId":"458","endLine":25,"endColumn":19},{"ruleId":"455","severity":1,"message":"486","line":26,"column":10,"nodeType":"457","messageId":"458","endLine":26,"endColumn":23},{"ruleId":"455","severity":1,"message":"500","line":27,"column":10,"nodeType":"457","messageId":"458","endLine":27,"endColumn":15},{"ruleId":"455","severity":1,"message":"501","line":28,"column":8,"nodeType":"457","messageId":"458","endLine":28,"endColumn":14},{"ruleId":"455","severity":1,"message":"464","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"519","line":2,"column":10,"nodeType":"457","messageId":"458","endLine":2,"endColumn":16},{"ruleId":"455","severity":1,"message":"515","line":2,"column":18,"nodeType":"457","messageId":"458","endLine":2,"endColumn":28},{"ruleId":"455","severity":1,"message":"483","line":5,"column":9,"nodeType":"457","messageId":"458","endLine":5,"endColumn":14},{"ruleId":"455","severity":1,"message":"468","line":11,"column":8,"nodeType":"457","messageId":"458","endLine":11,"endColumn":19},{"ruleId":"455","severity":1,"message":"516","line":12,"column":8,"nodeType":"457","messageId":"458","endLine":12,"endColumn":21},{"ruleId":"455","severity":1,"message":"477","line":47,"column":13,"nodeType":"457","messageId":"458","endLine":47,"endColumn":17},{"ruleId":"455","severity":1,"message":"477","line":65,"column":10,"nodeType":"457","messageId":"458","endLine":65,"endColumn":14},{"ruleId":"472","severity":1,"message":"517","line":90,"column":5,"nodeType":"474","endLine":90,"endColumn":28,"suggestions":"534"},{"ruleId":"478","severity":1,"message":"479","line":70,"column":50,"nodeType":"480","messageId":"481","endLine":70,"endColumn":51},{"ruleId":"478","severity":1,"message":"479","line":70,"column":63,"nodeType":"480","messageId":"481","endLine":70,"endColumn":64},{"ruleId":"455","severity":1,"message":"521","line":3,"column":10,"nodeType":"457","messageId":"458","endLine":3,"endColumn":14},{"ruleId":"455","severity":1,"message":"504","line":7,"column":23,"nodeType":"457","messageId":"458","endLine":7,"endColumn":34},{"ruleId":"472","severity":1,"message":"522","line":43,"column":6,"nodeType":"474","endLine":43,"endColumn":21,"suggestions":"535"},{"ruleId":"478","severity":1,"message":"479","line":47,"column":19,"nodeType":"480","messageId":"481","endLine":47,"endColumn":20},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'MyProfile' is defined but never used.","'reset' is defined but never used.","'FiChevronRight' is defined but never used.","'FiChevronLeft' is defined but never used.","'FaQuoteRight' is defined but never used.","'Card' is defined but never used.","'flexbox' is defined but never used.","'Grid' is defined but never used.","'getUser' is defined but never used.","'FlexBetween' is defined but never used.","'navigate' is assigned a value but never used.","'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getAllPerson'. Either include them or remove the dependency array.","ArrayExpression",["536"],"'isLoading' is assigned a value but never used.","'data' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Typography' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'ThemeProvider' is defined but never used.","'useMediaQuery' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'userId' is assigned a value but never used.","'AppBar' is defined but never used.","'theme' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'FormControl' is defined but never used.","'Close' is defined but never used.","'useSelect' is defined but never used.","'green' is defined but never used.","'zIndex' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'useSelector' is defined but never used.","'updateProfile' is defined but never used.","'followingCount' is assigned a value but never used.","'setFollowingCount' is assigned a value but never used.","'followerCount' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'user.follower'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFollowerCount' needs the current value of 'user.follower'.",["537"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["538"],"'CardHeader' is defined but never used.","'WidgetWrapper' is defined but never used.","React Hook useEffect has a missing dependency: 'person.follower'. Either include it or remove the dependency array.",["539"],"'Button' is defined but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["540"],["541"],"'Login' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["542"],["543"],["544"],"'backdropClasses' is defined but never used.","'owner' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["545"],["546"],["547"],{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"548","fix":"558"},{"desc":"559","fix":"560"},{"desc":"552","fix":"561"},{"desc":"550","fix":"562"},{"desc":"563","fix":"564"},{"desc":"554","fix":"565"},{"desc":"556","fix":"566"},"Update the dependencies array to be: [dispatch, getAllPerson]",{"range":"567","text":"568"},"Update the dependencies array to be: [getData, user.follower]",{"range":"569","text":"570"},"Update the dependencies array to be: [userId, token, dispatch]",{"range":"571","text":"572"},"Update the dependencies array to be: [person.follower, setIsFollowing.person]",{"range":"573","text":"574"},"Update the dependencies array to be: [userId, token, getData]",{"range":"575","text":"576"},{"range":"577","text":"568"},"Update the dependencies array to be: [navigate, x]",{"range":"578","text":"579"},{"range":"580","text":"572"},{"range":"581","text":"570"},"Update the dependencies array to be: [getUserData, post.user, token]",{"range":"582","text":"583"},{"range":"584","text":"574"},{"range":"585","text":"576"},[2006,2008],"[dispatch, getAllPerson]",[1454,1456],"[getData, user.follower]",[776,791],"[userId, token, dispatch]",[2031,2054],"[person.follower, setIsFollowing.person]",[1302,1317],"[userId, token, getData]",[2006,2008],[314,317],"[navigate, x]",[776,791],[1419,1421],[4271,4289],"[getUserData, post.user, token]",[2031,2054],[1356,1371]]