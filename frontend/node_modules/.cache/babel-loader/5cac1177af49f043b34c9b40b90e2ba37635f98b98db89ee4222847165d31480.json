{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\components\\\\CommentCard\\\\CommentCard.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Typography } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CommentCard.css';\n// import { Delete } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { deleteCommentOnPost } from '../../Actions/Post';\n// import { getFollowingPosts, getMyPosts } from '../../Actions/User';\n// import getFollowingPosts from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentCard = _ref => {\n  _s();\n  let {\n    userId,\n    name,\n    // profilePicture,\n    comment,\n    commentId,\n    postId,\n    // isAccount,\n    token\n  } = _ref;\n  const [userInComment, setUserInComment] = useState({\n    name: '',\n    profilePicture: ''\n  });\n  // const { user } = useSelector((state) => state.user);\n  // const token=user.token;\n  const dispatch = useDispatch();\n\n  // const deleteCommentHandle = () => {\n  //   dispatch(deleteCommentOnPost(postId, commentId));\n\n  //   if (isAccount) {\n  //     dispatch(getMyPosts());\n  //   } else {\n  //     dispatch(getFollowingPosts());\n  //   }\n  // };\n\n  const getData = async () => {\n    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const user = await res.json();\n    setUserInComment(user);\n    // console.log(user)\n  };\n\n  useEffect(() => {\n    getData(userId).then(userData => {\n      setUserInComment(userData);\n    }).catch(error => {\n      console.error(\" error fetching usrer\");\n    });\n  }, [userId, token]);\n  console.log(name);\n  console.log(userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentUser\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/Myprofile`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userInComment.profilePicture,\n        alt: userInComment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          minWidth: '6vmax'\n        },\n        children: userInComment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentCard, \"YKSGpcY/44Tdc1NCwfZtcVxBu5s=\", false, function () {\n  return [useDispatch];\n});\n_c = CommentCard;\nexport default CommentCard;\nvar _c;\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"names":["Button","Typography","React","useState","useEffect","Link","useDispatch","useSelector","CommentCard","userId","name","comment","commentId","postId","token","userInComment","setUserInComment","profilePicture","dispatch","getData","res","fetch","headers","Authorization","user","json","then","userData","catch","error","console","log","minWidth"],"sources":["D:/memories/frontend/src/components/CommentCard/CommentCard.jsx"],"sourcesContent":["import { Button, Typography } from '@mui/material';\r\nimport React,{useState,useEffect}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommentCard.css';\r\n// import { Delete } from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { deleteCommentOnPost } from '../../Actions/Post';\r\n// import { getFollowingPosts, getMyPosts } from '../../Actions/User';\r\n// import getFollowingPosts from '.';\r\n\r\nconst CommentCard = ({\r\n  userId,\r\n  name,\r\n// profilePicture,\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  // isAccount,\r\n  token,\r\n}) => {\r\n  const [userInComment, setUserInComment] = useState({\r\nname:'',\r\nprofilePicture:'' });\r\n  // const { user } = useSelector((state) => state.user);\r\n  // const token=user.token;\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteCommentHandle = () => {\r\n  //   dispatch(deleteCommentOnPost(postId, commentId));\r\n\r\n  //   if (isAccount) {\r\n  //     dispatch(getMyPosts());\r\n  //   } else {\r\n  //     dispatch(getFollowingPosts());\r\n  //   }\r\n  // };\r\n\r\n  const getData = async () => {\r\n    const res = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const user = await res.json();\r\n    setUserInComment(user);\r\n    // console.log(user)\r\n  };\r\nuseEffect(()=>{\r\ngetData(userId)\r\n.then((userData)=>{\r\n  setUserInComment(userData);\r\n})\r\n.catch((error)=>{\r\n  console.error(\" error fetching usrer\");\r\n})\r\n},[userId,token]);\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log(name);\r\n     console.log(userId);\r\n  return (\r\n    <div className='commentUser'>\r\n      <Link to={`/Myprofile`}>\r\n        <img src={userInComment.profilePicture} alt={userInComment.name} />\r\n        <Typography style={{ minWidth: '6vmax' }}>\r\n          {userInComment.name}\r\n        </Typography>\r\n      </Link>\r\n\r\n      <Typography>{comment}</Typography>\r\n\r\n      {/* {isAccount ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <Delete />\r\n        </Button>\r\n      ) : userId === user._id ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <Delete />\r\n        </Button>\r\n      ) : null} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClD,OAAOC,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAM,OAAO;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,mBAAmB;AAC1B;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA;AACA;AAAA;AAEA,MAAMC,WAAW,GAAG,QASd;EAAA;EAAA,IATe;IACnBC,MAAM;IACNC,IAAI;IACN;IACEC,OAAO;IACPC,SAAS;IACTC,MAAM;IACN;IACAC;EACF,CAAC;EACC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC;IACrDO,IAAI,EAAC,EAAE;IACPO,cAAc,EAAC;EAAG,CAAC,CAAC;EAClB;EACA;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;;EAE9B;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMa,OAAO,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCZ,MAAO,EAAC,EAAE;MACnEa,OAAO,EAAE;QACPC,aAAa,EAAG,UAAST,KAAM;MACjC;IACF,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAC7BT,gBAAgB,CAACQ,IAAI,CAAC;IACtB;EACF,CAAC;;EACHpB,SAAS,CAAC,MAAI;IACde,OAAO,CAACV,MAAM,CAAC,CACdiB,IAAI,CAAEC,QAAQ,IAAG;MAChBX,gBAAgB,CAACW,QAAQ,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAG;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAC;IACxC,CAAC,CAAC;EACF,CAAC,EAAC,CAACpB,MAAM,EAACK,KAAK,CAAC,CAAC;EAgBbgB,OAAO,CAACC,GAAG,CAACrB,IAAI,CAAC;EAChBoB,OAAO,CAACC,GAAG,CAACtB,MAAM,CAAC;EACtB,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B,QAAC,IAAI;MAAC,EAAE,EAAG,YAAY;MAAA,wBACrB;QAAK,GAAG,EAAEM,aAAa,CAACE,cAAe;QAAC,GAAG,EAAEF,aAAa,CAACL;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE,QAAC,UAAU;QAAC,KAAK,EAAE;UAAEsB,QAAQ,EAAE;QAAQ,CAAE;QAAA,UACtCjB,aAAa,CAACL;MAAI;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAEP,QAAC,UAAU;MAAA,UAAEC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA;IAAA;IAAA;IAAA;EAAA,QAW9B;AAEV,CAAC;AAAC,GArFIH,WAAW;EAAA,QAeEF,WAAW;AAAA;AAAA,KAfxBE,WAAW;AAuFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}