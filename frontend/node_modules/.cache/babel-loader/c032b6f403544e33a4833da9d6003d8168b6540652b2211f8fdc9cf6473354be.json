{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// create asyncthink funciton \nexport const register = createAsyncThunk('user/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.message && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const login = createAsyncThunk('user/login', async (user, thunkAPI) => {\n  try {\n    return await userService.login(user);\n  } catch (error) {\n    const message = error.message && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const userSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducer: {\n    reset: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isLoading = false;\n      state.message = '';\n    }\n  },\n  extraReducer: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      (state.isLoading = false)(state.isError = true);\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","userService","userSlice","name","reducer","reset","state","extraReducer","builder","addCase","pending","fulfilled","action","payload","rejected","authSlice","actions"],"sources":["C:/Users/ASUS/Desktop/memories/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from '@reduxjs/toolkit';\r\nimport authService from './authService'\r\nconst user=JSON.parse(localStorage.getItem('user'))\r\nconst initialState={\r\nuser: user ? user: null,\r\nisError:false,\r\nisSuccess:false,\r\nisLoading:false,\r\nmessage:''\r\n}\r\n\r\n// create asyncthink funciton \r\nexport const register=createAsyncThunk('user/register',async(user,thunkAPI)=>{\r\ntry {\r\n return await authService.register(user)\r\n} catch (error) {\r\n const message =\r\n   (error.message && error.response.data && error.response.data.message) ||\r\n   error.message ||\r\n   error.toString();\r\n return thunkAPI.rejectWithValue(message);\r\n}\r\n})\r\n\r\nexport const login=createAsyncThunk('user/login',async(user,thunkAPI)=>{\r\ntry {\r\n return await userService.login(user)\r\n} catch (error) {\r\nconst message =\r\n  (error.message && error.response.data && error.response.data.message) ||\r\n  error.message ||\r\n  error.toString();\r\nreturn thunkAPI.rejectWithValue(message)\r\n}\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const userSlice=createSlice({\r\n name:'auth',\r\n initialState,\r\n reducer:{\r\n      reset:(state)=>{\r\n    state.isError=false\r\n    state.isSuccess=false\r\n    state.isLoading=false\r\n    state.message=''\r\n      },\r\n },\r\n extraReducer:(builder)=>{\r\n  builder\r\n    .addCase(register.pending, (state) => {\r\n      state.isLoading = true;\r\n    })\r\n    .addCase(register.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = true;\r\n      state.user = action.payload;\r\n    })\r\n    .addCase(register.rejected, (state, action) => {\r\n      (state.isLoading = false)\r\n       (state.isError = true)\r\n      state.message = action.payload;\r\n      state.user = null;\r\n    })\r\n    .addCase(login.pending, (state) => {\r\n      state.isLoading = true;\r\n    })\r\n    .addCase(login.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = true;\r\n      state.user = action.payload;\r\n    })\r\n    .addCase(login.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.message = action.payload;\r\n      state.user = null;\r\n    })\r\n },\r\n});\r\nexport const {reset}=authSlice.actions \r\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}