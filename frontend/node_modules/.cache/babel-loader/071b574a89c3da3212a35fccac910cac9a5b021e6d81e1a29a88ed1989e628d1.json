{"ast":null,"code":"import axios from 'axios';\n// const API_URL='/api/posts';\nconst API_URL = 'http://localhost:5000/';\n// create new post\n\nconst createPost = async (postData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post('http://localhost:5000/api/posts', postData, config);\n  // console.log('data posted');\n  return response.data;\n};\n\n// const createPost = async (postData, token) => {\n//   const config = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(postData),\n//   };\n\n//   try {\n//     const response = await fetch(API_URL, config);\n//     console.log('data posted');\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// };\n\nconst getUserFeed = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get('http://localhost:5000/api/posts', config);\n  // console.log(' getFeedpost is working');\n  // console.log(response.data);\n  return response.data;\n};\nconst getUserPosts = async (userId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + '/' + `${userId}` + '/posts', config);\n  // console.log(' getUserpost is working');\n  // console.log(response);\n  return response.data;\n};\nconst deletePost = async (postId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(API_URL + '/' + postId, config);\n  // console.log(response);\n  // console.log(' post is deleted');\n  return response.data;\n};\n\n// const editPost = async (postId,editCaption, token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   };\n//  const captionData={\n//   value:editCaption,\n//  }\n//   const response = await axios.put(API_URL + '/' + `${postId}`, captionData,config);\n//   console.log(response);\n//   return response.data;\n// };\n\n// const addComment = async (postId,commentValue, token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       'Content-Type':'application/json'\n//     },\n//   };\n//  const postData = {\n//    value: commentValue,\n//  };\n\n//   const response = await axios.put(API_URL + '/'+'comment' + '/'+`${postId}` ,postData,config);\n//   console.log(response);\n//    console.log(' comment added');\n//   return response.data;\n// };\n\nconst postService = {\n  createPost,\n  getUserFeed,\n  getUserPosts,\n  deletePost\n};\nexport default postService;","map":{"version":3,"names":["axios","API_URL","createPost","postData","token","config","headers","Authorization","response","post","data","getUserFeed","get","getUserPosts","userId","deletePost","postId","delete","postService"],"sources":["D:/Memorify/frontend/src/features/Posts/postService.js"],"sourcesContent":["import axios from 'axios';\r\n// const API_URL='/api/posts';\r\nconst API_URL = 'http://localhost:5000/';\r\n// create new post\r\n\r\nconst createPost=async(postData,token)=>{\r\n const config = {\r\n   headers: {\r\n     Authorization: `Bearer ${token}`,\r\n   },\r\n };\r\n  const response = await axios.post(\r\n    'http://localhost:5000/api/posts',\r\n    postData,\r\n    config\r\n  );\r\n  // console.log('data posted');\r\n  return response.data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const createPost = async (postData, token) => {\r\n//   const config = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(postData),\r\n//   };\r\n\r\n//   try {\r\n//     const response = await fetch(API_URL, config);\r\n//     console.log('data posted');\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getUserFeed = async (token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get('http://localhost:5000/api/posts', config);\r\n  // console.log(' getFeedpost is working');\r\n  // console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst getUserPosts = async (userId,token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL + '/' + `${userId}`+ '/posts', config);\r\n  // console.log(' getUserpost is working');\r\n  // console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst deletePost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.delete(API_URL +'/'+postId, config);\r\n  // console.log(response);\r\n  // console.log(' post is deleted');\r\n  return response.data;\r\n};\r\n\r\n// const editPost = async (postId,editCaption, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   };\r\n//  const captionData={\r\n//   value:editCaption,\r\n//  }\r\n//   const response = await axios.put(API_URL + '/' + `${postId}`, captionData,config);\r\n//   console.log(response);\r\n//   return response.data;\r\n// };\r\n\r\n// const addComment = async (postId,commentValue, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//       'Content-Type':'application/json'\r\n//     },\r\n//   };\r\n//  const postData = {\r\n//    value: commentValue,\r\n//  };\r\n\r\n//   const response = await axios.put(API_URL + '/'+'comment' + '/'+`${postId}` ,postData,config);\r\n//   console.log(response);\r\n//    console.log(' comment added');\r\n//   return response.data;\r\n// };\r\n\r\n\r\n\r\nconst postService = {\r\n  createPost,\r\n  getUserFeed,\r\n  getUserPosts,\r\n  deletePost,\r\n\r\n};\r\n\r\nexport default postService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,wBAAwB;AACxC;;AAEA,MAAMC,UAAU,GAAC,OAAMC,QAAQ,EAACC,KAAK,KAAG;EACvC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EACA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,iCAAiC,EACjCN,QAAQ,EACRE,MAAM,CACP;EACD;EACA,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,MAAMC,WAAW,GAAG,MAAOP,KAAK,IAAK;EACnC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,iCAAiC,EAAEP,MAAM,CAAC;EAC3E;EACA;EACA,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAID,MAAMG,YAAY,GAAG,OAAOC,MAAM,EAACV,KAAK,KAAK;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAG,GAAG,GAAI,GAAEa,MAAO,EAAC,GAAE,QAAQ,EAAET,MAAM,CAAC;EAC/E;EACA;EACA,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAGD,MAAMK,UAAU,GAAG,OAAOC,MAAM,EAAEZ,KAAK,KAAK;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACiB,MAAM,CAAChB,OAAO,GAAE,GAAG,GAACe,MAAM,EAAEX,MAAM,CAAC;EAChE;EACA;EACA,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA,MAAMQ,WAAW,GAAG;EAClBhB,UAAU;EACVS,WAAW;EACXE,YAAY;EACZE;AAEF,CAAC;AAED,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}