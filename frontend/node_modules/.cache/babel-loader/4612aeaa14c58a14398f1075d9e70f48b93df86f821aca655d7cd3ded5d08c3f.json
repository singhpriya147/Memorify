{"ast":null,"code":"// import axios from 'axios';\n// const API_URL='/api/posts';\n\n// create new post\n\n// const createPost=async(postData,token)=>{\n//  const config = {\n//    headers: {\n//      Authorization: `Bearer ${token}`,\n//    },\n//  };\n//   const response = await axios.post(API_URL, postData, config);\n//   console.log('data posted');\n//   return response.data;\n// }\n\nconst API_URL = '/api/posts';\nconst createPost = async (postData, token) => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(postData)\n  };\n  try {\n    const response = await fetch(API_URL, config);\n    console.log('data posted');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Get user post\nconst getPosts = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n};\n\n// const getPosts = async (token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   };\n\n//   const response = await fetch(API_URL, config);\n\n//   return response.data;\n// };\n\n// Delete user post\n// const deletePost = async (postId, token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   };\n\n//   const response = await axios.delete(API_URL + postId, config);\n\n//   return response.data;\n// };\n\nconst deletePost = async (postId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(API_URL + '/' + postId, config);\n  console.log(response);\n  return response.data;\n};\nconst postService = {\n  createPost,\n  getPosts,\n  deletePost\n};\nexport default postService;","map":{"version":3,"names":["API_URL","createPost","postData","token","config","method","headers","Authorization","body","JSON","stringify","response","fetch","console","log","data","json","error","getPosts","axios","get","deletePost","postId","delete","postService"],"sources":["C:/Users/ASUS/Desktop/memories/frontend/src/features/Posts/postService.js"],"sourcesContent":["// import axios from 'axios';\r\n// const API_URL='/api/posts';\r\n\r\n// create new post\r\n\r\n// const createPost=async(postData,token)=>{\r\n//  const config = {\r\n//    headers: {\r\n//      Authorization: `Bearer ${token}`,\r\n//    },\r\n//  };\r\n//   const response = await axios.post(API_URL, postData, config);\r\n//   console.log('data posted');\r\n//   return response.data;\r\n// }\r\n\r\n\r\n\r\n\r\nconst API_URL = '/api/posts';\r\n\r\nconst createPost = async (postData, token) => {\r\n  const config = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(postData),\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(API_URL, config);\r\n    console.log('data posted');\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\n// Get user post\r\nconst getPosts = async (token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL, config);\r\n\r\n  return response.data;\r\n};\r\n\r\n\r\n// const getPosts = async (token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   };\r\n\r\n//   const response = await fetch(API_URL, config);\r\n\r\n//   return response.data;\r\n// };\r\n\r\n// Delete user post\r\n// const deletePost = async (postId, token) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   };\r\n\r\n//   const response = await axios.delete(API_URL + postId, config);\r\n\r\n//   return response.data;\r\n// };\r\n\r\n\r\nconst deletePost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.delete(API_URL +'/'+postId, config);\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst postService = {\r\n  createPost,\r\n  getPosts,\r\n  deletePost,\r\n};\r\n\r\nexport default postService;"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMA,OAAO,GAAG,YAAY;AAE5B,MAAMC,UAAU,GAAG,OAAOC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASJ,KAAM;IACjC,CAAC;IACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;EAC/B,CAAC;EAED,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,EAAEI,MAAM,CAAC;IAC7CS,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAGD;AACA,MAAMC,QAAQ,GAAG,MAAOf,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAG;IACbE,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMQ,KAAK,CAACC,GAAG,CAACpB,OAAO,EAAEI,MAAM,CAAC;EAEjD,OAAOO,QAAQ,CAACI,IAAI;AACtB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA,MAAMM,UAAU,GAAG,OAAOC,MAAM,EAAEnB,KAAK,KAAK;EAC1C,MAAMC,MAAM,GAAG;IACbE,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMQ,KAAK,CAACI,MAAM,CAACvB,OAAO,GAAE,GAAG,GAACsB,MAAM,EAAElB,MAAM,CAAC;EAChES,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC;AAOD,MAAMS,WAAW,GAAG;EAClBvB,UAAU;EACViB,QAAQ;EACRG;AACF,CAAC;AAED,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}