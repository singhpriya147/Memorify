{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport { theme } from '../components/styling';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n// import MenuIcon from '@mui/icons-material/Menu';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout, reset } from '../features/auth/authSlice';\nimport { useSelect } from '@mui/base';\nimport { ThemeProvider } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonAppBar() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // from state we only want user so we use useselector \n  const {\n    user\n  } = useSelector(state => state.auth);\n  const onLogout = () => {\n    console.log(\" clicked on logout button\");\n    dispatch(logout());\n    dispatch(reset());\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ButtonAppBar, \"cVTWz0g4nOXKxmFf/+X7AqV2i68=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = ButtonAppBar;\nvar _c;\n$RefreshReg$(_c, \"ButtonAppBar\");","map":{"version":3,"names":["React","Link","useNavigate","AppBar","theme","Box","Toolbar","Typography","Button","IconButton","useSelector","useDispatch","logout","reset","useSelect","ThemeProvider","ButtonAppBar","navigate","dispatch","user","state","auth","onLogout","console","log"],"sources":["D:/memories/frontend/src/components/Header.jsx"],"sourcesContent":["\r\nimport * as React from 'react';\r\nimport {Link,useNavigate} from 'react-router-dom'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport { theme } from '../components/styling'\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport{logout,reset} from '../features/auth/authSlice'\r\nimport { useSelect } from '@mui/base';\r\nimport { ThemeProvider } from '@emotion/react';\r\n\r\n\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n const navigate=useNavigate()\r\n const dispatch=useDispatch()\r\n\r\n // from state we only want user so we use useselector \r\n const {user}=useSelector((state)=>state.auth);\r\n\r\n\r\nconst onLogout=()=>{\r\n  console.log(\" clicked on logout button\")\r\n  dispatch(logout())\r\n  dispatch(reset())\r\n  navigate('/login')\r\n}\r\n\r\n\r\n  return (\r\n    <ThemeProvider>\r\n\r\n\r\n    </ThemeProvider>\r\n   \r\n  );\r\n}"],"mappings":";;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,IAAI,EAACC,WAAW,QAAO,kBAAkB;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD;;AAEA,SAAQC,WAAW,EAACC,WAAW,QAAO,aAAa;AACnD,SAAOC,MAAM,EAACC,KAAK,QAAO,4BAA4B;AACtD,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,aAAa,QAAQ,gBAAgB;AAAC;AAM/C,eAAe,SAASC,YAAY,GAAG;EAAA;EACtC,MAAMC,QAAQ,GAACf,WAAW,EAAE;EAC5B,MAAMgB,QAAQ,GAACP,WAAW,EAAE;;EAE5B;EACA,MAAM;IAACQ;EAAI,CAAC,GAACT,WAAW,CAAEU,KAAK,IAAGA,KAAK,CAACC,IAAI,CAAC;EAG9C,MAAMC,QAAQ,GAAC,MAAI;IACjBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCN,QAAQ,CAACN,MAAM,EAAE,CAAC;IAClBM,QAAQ,CAACL,KAAK,EAAE,CAAC;IACjBI,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAGC,oBACE,QAAC,aAAa;IAAA;IAAA;IAAA;EAAA,QAGE;AAGpB;AAAC,GAvBuBD,YAAY;EAAA,QACpBd,WAAW,EACXS,WAAW,EAGbD,WAAW;AAAA;AAAA,KALDM,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}