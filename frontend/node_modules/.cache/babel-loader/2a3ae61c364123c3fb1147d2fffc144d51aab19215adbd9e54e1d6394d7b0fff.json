{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostItem from '../components/PostItem';\nimport Header from '../components/Header';\nimport { getPosts, reset } from '../features/Posts/postSlice';\nimport MyProfile from '../components/MyProfile';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    posts,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.posts);\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n    }\n    if (!user) {\n      console.log('null');\n      navigate('/login');\n    }\n    dispatch(getPosts());\n    return () => {\n      dispatch(reset());\n    };\n  }, [user, navigate, isError, message, dispatch]);\n\n  // if (isLoading) {\n  // console.log(\"loading..\")\n  // }\n  // console.log(user)\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", user && user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PostDashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(MyProfile, {\n      userId: user._id,\n      token: user.token\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You have not set any memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"SUVglIdgoe6a1JBH15sjA4VSS9o=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useNavigate","useSelector","useDispatch","PostForm","PostItem","Header","getPosts","reset","MyProfile","Login","Dashboard","navigate","dispatch","user","state","auth","posts","isLoading","isError","message","console","log","name","_id","token","length","map","post"],"sources":["D:/memories/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostItem from '../components/PostItem';\r\nimport Header from '../components/Header'\r\nimport { getPosts,reset } from '../features/Posts/postSlice';\r\nimport MyProfile from '../components/MyProfile';\r\nimport Login from './Login';\r\n\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { posts, isLoading, isError, message } = useSelector(\r\n    (state) => state.posts\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      console.log(message);\r\n    }\r\n\r\n    if (!user) {\r\n      console.log('null')\r\n      navigate('/login');\r\n    }\r\n\r\n    dispatch(getPosts());\r\n\r\n    return () => {\r\n      dispatch(reset());\r\n    };\r\n  }, [user, navigate, isError, message, dispatch]);\r\n\r\n  // if (isLoading) {\r\n  // console.log(\"loading..\")\r\n  // }\r\n  // console.log(user)\r\n  if(!user){\r\n    return <Login/>\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className='heading'>\r\n        <h1>Welcome {user && user.name}</h1>\r\n        <p>PostDashboard</p>\r\n      </section>\r\n\r\n      <PostForm />\r\n      {user?<MyProfile key={user._id} userId={user._id} token ={user.token}/>:null}\r\n     \r\n      <section className='content'>\r\n        {posts.length > 0 ? (\r\n          <div className='goals'>\r\n            {posts.map((post) => (\r\n              <PostItem key={post._id} post={post} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h3>You have not set any memories</h3>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,EAACC,KAAK,QAAQ,6BAA6B;AAC5D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAAC;AAAA;AAG5B,SAASC,SAAS,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAM;IAAEW;EAAK,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnD,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGlB,WAAW,CACvDa,KAAK,IAAKA,KAAK,CAACE,KAAK,CACvB;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAImB,OAAO,EAAE;MACXE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB;IAEA,IAAI,CAACN,IAAI,EAAE;MACTO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBV,QAAQ,CAAC,QAAQ,CAAC;IACpB;IAEAC,QAAQ,CAACN,QAAQ,EAAE,CAAC;IAEpB,OAAO,MAAM;MACXM,QAAQ,CAACL,KAAK,EAAE,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACM,IAAI,EAAEF,QAAQ,EAAEO,OAAO,EAAEC,OAAO,EAAEP,QAAQ,CAAC,CAAC;;EAEhD;EACA;EACA;EACA;EACA,IAAG,CAACC,IAAI,EAAC;IACP,oBAAO,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EACjB;EACA,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAS,SAAS,EAAC,SAAS;MAAA,wBAC1B;QAAA,WAAI,UAAQ,EAACA,IAAI,IAAIA,IAAI,CAACS,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACpC;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eAEV,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,EACXT,IAAI,gBAAC,QAAC,SAAS;MAAgB,MAAM,EAAEA,IAAI,CAACU,GAAI;MAAC,KAAK,EAAGV,IAAI,CAACW;IAAM,GAA/CX,IAAI,CAACU,GAAG;MAAA;MAAA;MAAA;IAAA,QAAyC,GAAC,IAAI,eAE5E;MAAS,SAAS,EAAC,SAAS;MAAA,UACzBP,KAAK,CAACS,MAAM,GAAG,CAAC,gBACf;QAAK,SAAS,EAAC,OAAO;QAAA,UACnBT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACd,QAAC,QAAQ;UAAgB,IAAI,EAAEA;QAAK,GAArBA,IAAI,CAACJ,GAAG;UAAA;UAAA;UAAA;QAAA,QACxB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,gBAEN;QAAA,UAAI;MAA6B;QAAA;QAAA;QAAA;MAAA;IAClC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA,gBACT;AAEP;AAAC,GAzDQb,SAAS;EAAA,QACCV,WAAW,EACXE,WAAW,EAEXD,WAAW,EACmBA,WAAW;AAAA;AAAA,KALnDS,SAAS;AA2DlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}