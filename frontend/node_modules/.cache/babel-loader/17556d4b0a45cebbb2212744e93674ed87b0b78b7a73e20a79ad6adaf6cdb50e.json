{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostItem from '../components/PostItem';\nimport Header from '../components/Header';\nimport { reset } from '../features/auth/authSlice';\nimport MyProfile from '../components/MyProfile';\nimport { Box, Card, Typography } from '@material-ui/core';\nimport { flexbox } from '@mui/system';\nimport { getFeedPosts } from '../features/Posts/postSlice';\nimport UserItem from '../components/UserItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [posts, setPosts] = useState([]);\n  const [persons, setPersons] = useState([]);\n  // const { posts, isLoading, isError, message } = useSelector(\n  //   (state) => state.posts\n  // );\n  // console.log(user._id,user.token);\n\n  // useEffect(() => {\n  //   console.log(2)\n  //   // if (isError) {\n  //   //   console.log(message);\n  //   // }\n\n  //   if (!user) {\n\n  //     navigate('/login');\n  //   }\n\n  //   // dispatch(getFeedPosts());\n\n  //   return () => {\n  //     dispatch(reset());\n  //   };\n  //   }, [user,navigate,  dispatch]);\n\n  const userId = user._id;\n  const token = user.token;\n  useEffect(() => {\n    getUserFeed();\n    getAllPerson();\n  }, [userId, token]);\n  const getUserFeed = async () => {\n    const res = await fetch(`http://localhost:5000/api/posts`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const post = await res.json();\n    setPosts(post.posts);\n    console.log(post);\n  };\n  const getAllPerson = async () => {\n    const res = await fetch(`http://localhost:5000/api/users`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const allUsers = await res.json();\n    setPersons(allUsers.users);\n    console.log(allUsers.users);\n    console.log(persons);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100vh\",\n      padding: \"2rem\",\n      gap: \"0.5rem\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: '3rem',\n          width: 500,\n          alignContent: 'center'\n        },\n        children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 500,\n            height: 300\n          },\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n            post: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"You have not set any memories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: '6rem'\n        },\n        children: user ? /*#__PURE__*/_jsxDEV(MyProfile, {\n          userId: user._id,\n          token: user.token\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: '10rem',\n          width: 500,\n          alignContent: 'center'\n        },\n        children: persons.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 500,\n            height: 300\n          },\n          children: persons.map(person => /*#__PURE__*/_jsxDEV(UserItem, {\n            person: person\n          }, person._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"no user available to follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"d1QxGSC3LcEzbnP2mlcKhDrx1vE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useSelector","useDispatch","PostForm","PostItem","Header","reset","MyProfile","Box","Card","Typography","flexbox","getFeedPosts","UserItem","Dashboard","navigate","dispatch","user","state","auth","posts","setPosts","persons","setPersons","userId","_id","token","getUserFeed","getAllPerson","res","fetch","headers","Authorization","post","json","console","log","allUsers","users","padding","width","alignContent","length","height","map","ml","pt","person"],"sources":["D:/memories/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostItem from '../components/PostItem';\r\nimport Header from '../components/Header'\r\nimport { reset } from '../features/auth/authSlice';\r\nimport MyProfile from '../components/MyProfile';\r\nimport { Box, Card, Typography } from '@material-ui/core';\r\nimport { flexbox } from '@mui/system';\r\nimport { getFeedPosts } from '../features/Posts/postSlice';\r\n\r\nimport UserItem from '../components/UserItem'\r\nfunction Dashboard() {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n    const [posts, setPosts] = useState([]);\r\n    const [persons,setPersons]=useState([]);\r\n  // const { posts, isLoading, isError, message } = useSelector(\r\n  //   (state) => state.posts\r\n  // );\r\n  // console.log(user._id,user.token);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(2)\r\n  //   // if (isError) {\r\n  //   //   console.log(message);\r\n  //   // }\r\n\r\n  //   if (!user) {\r\n\r\n  //     navigate('/login');\r\n  //   }\r\n\r\n  //   // dispatch(getFeedPosts());\r\n\r\n  //   return () => {\r\n  //     dispatch(reset());\r\n  //   };\r\n  //   }, [user,navigate,  dispatch]);\r\n  \r\n\r\n const userId = user._id;\r\n const token = user.token;\r\n useEffect(() => {\r\n  \r\n   getUserFeed();\r\n   getAllPerson();\r\n   \r\n }, [userId, token]);\r\n\r\n\r\n\r\n  const getUserFeed = async () => {\r\n    \r\n    const res = await fetch(\r\n      `http://localhost:5000/api/posts`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    const post = await res.json();\r\n    \r\n    setPosts(post.posts);\r\n    \r\n    console.log(post);\r\n  };\r\n\r\n\r\n const getAllPerson = async () => {\r\n   const res = await fetch(`http://localhost:5000/api/users`, {\r\n     headers: {\r\n       Authorization: `Bearer ${token}`,\r\n     },\r\n   });\r\n   const allUsers = await res.json();\r\n\r\n   setPersons(allUsers.users);\r\n\r\n   console.log(allUsers.users);\r\n   console.log(persons)\r\n };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Box\r\n        width='100vh'\r\n        padding='2rem'\r\n        gap='0.5rem'\r\n        justifyContent='space-between'\r\n        display='flex'\r\n      >\r\n        <Box>\r\n          <PostForm />\r\n        </Box>\r\n\r\n        <Box sx={{ padding: '3rem', width: 500, alignContent: 'center' }}>\r\n          {posts.length > 0 ? (\r\n            <Box sx={{ width: 500, height: 300 }}>\r\n              {posts.map((post) => (\r\n                <PostItem key={post._id} post={post} />\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Typography>You have not set any memories</Typography>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ ml: '6rem' }}>\r\n          {user ? (\r\n            <MyProfile key={user._id} userId={user._id} token={user.token} />\r\n          ) : null}\r\n        </Box>\r\n        {/* avilable user to follow */}\r\n        <Box sx={{ pt: '10rem', width: 500, alignContent: 'center' }}>\r\n          {persons.length > 0 ? (\r\n            <Box sx={{ width: 500, height: 300 }}>\r\n              {persons.map((person) => (\r\n                <UserItem key={person._id} person={person} />\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Typography>no user available to follow</Typography>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}