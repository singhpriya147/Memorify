{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories-backup\\\\frontend\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useStyles } from './styling';\nimport Typography from '@mui/material/Typography';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport TextField from '@mui/material/TextField';\n// import CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\n// import CardHeader from '@mui/material/CardHeader';\nimport { Box, Container } from '@material-ui/core';\nimport { createPost } from '../features/Posts/postSlice';\nimport { useState } from 'react';\nimport FlexBetween from './FlexBetween';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: '',\n    fav: false,\n    location: ''\n  });\n  const {\n    title,\n    message,\n    tags,\n    selectedFile,\n    fav,\n    location\n  } = postData;\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(\"clicked submit button\")\n    const Data = {\n      title,\n      message,\n      tags,\n      selectedFile,\n      fav,\n      location\n    };\n    // console.log(Data);\n\n    dispatch(createPost(Data));\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: '',\n      location: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: ` ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Caption\",\n        fullWidth: true,\n        multiline: true,\n        value: postData.title\n        // className={classes.textField}\n        ,\n        inputProps: classes.textField,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        multiline: true,\n        fullWidth: true,\n        rows: 1,\n        value: postData.message,\n        className: classes.textField,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"location\",\n        variant: \"outlined\",\n        label: \"Location\",\n        fullWidth: true,\n        multiline: true,\n        value: postData.location,\n        className: classes.textField,\n        onChange: e => setPostData({\n          ...postData,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary.li\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(PostForm, \"1v0BjtiAaMsIYouz2pNowR1R9ho=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useStyles","Typography","FileBase","useDispatch","Paper","Card","TextField","Button","Box","Container","createPost","useState","FlexBetween","PostForm","classes","postData","setPostData","title","message","tags","selectedFile","fav","location","dispatch","handleSubmit","e","preventDefault","Data","form","textField","target","value","fileInput","base64","buttonSubmit"],"sources":["D:/memories-backup/frontend/src/components/PostForm.jsx"],"sourcesContent":["import  React from 'react';\r\nimport {useStyles }from './styling';\r\nimport  Typography  from '@mui/material/Typography';\r\n\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch} from 'react-redux'\r\nimport Paper from '@mui/material/Paper';\r\nimport Card from '@mui/material/Card'\r\nimport TextField from '@mui/material/TextField';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\n// import CardHeader from '@mui/material/CardHeader';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport {createPost} from '../features/Posts/postSlice'\r\nimport{useState} from 'react'\r\nimport FlexBetween from './FlexBetween';\r\n\r\n\r\n\r\nfunction PostForm() {\r\n\r\n\r\nconst classes=useStyles()\r\n\r\n   const [postData, setPostData] = useState({\r\n  \r\n  title:'',\r\n  message: '',\r\n  tags:'',\r\n  selectedFile:'',\r\n  fav:false,\r\n   location:'',\r\n   });\r\n\r\n\r\nconst {  title, message, tags, selectedFile,fav ,location} =\r\n  postData;\r\n\r\nconst dispatch=useDispatch()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n\r\n\r\n\r\nconst handleSubmit=(e)=>{\r\n e.preventDefault();\r\n  // console.log(\"clicked submit button\")\r\nconst Data = {\r\n\r\n  title,\r\n  message,\r\n  tags,\r\n  selectedFile,\r\n  fav,\r\n  location,\r\n};\r\n// console.log(Data);\r\n\r\n\r\n  dispatch(createPost(Data))\r\n  \r\n  setPostData({\r\n    \r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    selectedFile: '',\r\n    location:'',\r\n  });\r\n};\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={` ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          name='title'\r\n          variant='outlined'\r\n          label='Caption'\r\n          fullWidth\r\n          multiline\r\n          value={postData.title}\r\n          // className={classes.textField}\r\n          inputProps={classes.textField}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          name='message'\r\n          variant='outlined'\r\n          label='Message'\r\n          multiline\r\n          fullWidth\r\n          rows={1}\r\n          value={postData.message}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          name='location'\r\n          variant='outlined'\r\n          label='Location'\r\n          fullWidth\r\n          multiline\r\n          value={postData.location}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, location: e.target.value })\r\n          }\r\n        />\r\n\r\n        {/* <TextField\r\n          name='tags'\r\n          variant='outlined'\r\n          label='Tags (coma separated)'\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(',') })\r\n          }\r\n        /> */}\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type='file'\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant='contained'\r\n          color='secondary.li'\r\n          size='large'\r\n          type='submit'\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        {/* <Button\r\n          className={classes.buttonClear}\r\n          variant='contained'\r\n          color='secondary'\r\n          // size='small'\r\n          // onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button> */}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default PostForm\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}