{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\pages\\\\MyPosts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserPosts } from '../features/Posts/postSlice';\nimport { Box, Typography } from '@material-ui/core';\nimport PostItem from '../components/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyPosts() {\n  _s();\n  const [post, setPost] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    posts,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.posts);\n  console.log(user._id, user.token);\n  useEffect(() => {\n    getUserPosts();\n  }, [userId, token]);\n  const getUserPosts = async () => {\n    const res = await fetch(`http://localhost:5000/api/posts/:${userId}/posts`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const post = await res.json();\n    setPost(post);\n    // console.log(user)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: '3rem',\n        width: 500,\n        alignContent: 'center'\n      },\n      children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500,\n          height: 300\n        },\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"You have not set any memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MyPosts, \"zcrhLjXhZLEQm+pdO4j6dw5fgEA=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useNavigate","getUserPosts","Box","Typography","PostItem","MyPosts","post","setPost","useState","dispatch","navigate","user","state","auth","posts","isLoading","isError","message","console","log","_id","token","userId","res","fetch","headers","Authorization","json","padding","width","alignContent","length","height","map"],"sources":["D:/memories/frontend/src/pages/MyPosts.jsx"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {getUserPosts} from '../features/Posts/postSlice';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport PostItem from '../components/PostItem';\r\nfunction MyPosts() {\r\n\r\n  const [post,setPost]=useState('')\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { posts, isLoading, isError, message } = useSelector(\r\n    (state) => state.posts\r\n  );\r\n   console.log(user._id,user.token)\r\n\r\n \r\n\r\n useEffect(() => {\r\n   getUserPosts();\r\n }, [userId, token]);\r\n\r\n\r\n  const getUserPosts = async () => {\r\n    const res = await fetch(`http://localhost:5000/api/posts/:${userId}/posts`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const post = await res.json();\r\n    setPost(post);\r\n    // console.log(user)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ padding: '3rem', width: 500, alignContent: 'center' }}>\r\n        {posts.length > 0 ? (\r\n          <Box sx={{ width: 500, height: 300 }}>\r\n            {posts.map((post) => (\r\n              <PostItem key={post._id} post={post} />\r\n            ))}\r\n          </Box>\r\n        ) : (\r\n          <Typography>You have not set any memories</Typography>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPosts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,YAAY,QAAO,6BAA6B;AACxD,SAASC,GAAG,EAAEC,UAAU,QAAQ,mBAAmB;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAAA;AAC9C,SAASC,OAAO,GAAG;EAAA;EAEjB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACC,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM;IAAEW;EAAK,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnD,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGlB,WAAW,CACvDa,KAAK,IAAKA,KAAK,CAACE,KAAK,CACvB;EACAI,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,GAAG,EAACT,IAAI,CAACU,KAAK,CAAC;EAIlCxB,SAAS,CAAC,MAAM;IACdI,YAAY,EAAE;EAChB,CAAC,EAAE,CAACqB,MAAM,EAAED,KAAK,CAAC,CAAC;EAGlB,MAAMpB,YAAY,GAAG,YAAY;IAC/B,MAAMsB,GAAG,GAAG,MAAMC,KAAK,CAAE,oCAAmCF,MAAO,QAAO,EAAE;MAC1EG,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC;IACF,MAAMf,IAAI,GAAG,MAAMiB,GAAG,CAACI,IAAI,EAAE;IAC7BpB,OAAO,CAACD,IAAI,CAAC;IACb;EACF,CAAC;;EAED,oBACE;IAAA,uBACE,QAAC,GAAG;MAAC,EAAE,EAAE;QAAEsB,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE,GAAG;QAAEC,YAAY,EAAE;MAAS,CAAE;MAAA,UAC9DhB,KAAK,CAACiB,MAAM,GAAG,CAAC,gBACf,QAAC,GAAG;QAAC,EAAE,EAAE;UAAEF,KAAK,EAAE,GAAG;UAAEG,MAAM,EAAE;QAAI,CAAE;QAAA,UAClClB,KAAK,CAACmB,GAAG,CAAE3B,IAAI,iBACd,QAAC,QAAQ;UAAgB,IAAI,EAAEA;QAAK,GAArBA,IAAI,CAACc,GAAG;UAAA;UAAA;UAAA;QAAA,QACxB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,gBAEN,QAAC,UAAU;QAAA,UAAC;MAA6B;QAAA;QAAA;QAAA;MAAA;IAC1C;MAAA;MAAA;MAAA;IAAA;EACG,iBACL;AAEP;AAAC,GA5CQf,OAAO;EAAA,QAGGP,WAAW,EACXE,WAAW,EACXD,WAAW,EACmBA,WAAW;AAAA;AAAA,KANnDM,OAAO;AA8ChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}