{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport userService from './userService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const getUser = createAsyncThunk('user/getUser', async (userData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await userService.getUser(userData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getUser.pending, state => {\n      state.isLoading = true;\n    })\n\n    // fulfilled\n    .addCase(getUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    })\n\n    //rejected\n    .addCase(getUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","getUser","userData","thunkAPI","token","getState","auth","error","response","data","toString","rejectWithValue","userSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/ASUS/Desktop/memories/frontend/src/features/user/userSlice.jsx"],"sourcesContent":["import{createSlice,createAsyncThunk} from '@reduxjs/toolkit';\r\nimport userService from './userService'\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\nexport const getUser=createAsyncThunk('user/getUser',async(userData,thunkAPI)=>{\r\n try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await userService.getUser(userData, token)\r\n      \r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n        }\r\n})\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers:(builder)=>{\r\n   builder\r\n     .addCase(getUser.pending, (state) => {\r\n       state.isLoading = true;\r\n     })\r\n\r\n     // fulfilled\r\n     .addCase(getUser.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.isSuccess = true;\r\n       state.user = action.payload;\r\n     })\r\n\r\n      //rejected\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n  }\r\n});\r\nexport const { reset } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAAOA,WAAW,EAACC,gBAAgB,QAAO,kBAAkB;AAC5D,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAGrD,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG,IAAI;EACxBM,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,OAAO,GAACZ,gBAAgB,CAAC,cAAc,EAAC,OAAMa,QAAQ,EAACC,QAAQ,KAAG;EAC9E,IAAI;IACC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACf,IAAI,CAACa,KAAK;IACjD,OAAO,MAAMd,WAAW,CAACW,OAAO,CAACC,QAAQ,EAAEE,KAAK,CAAC;EAEnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMP,OAAO,GACVO,KAAK,CAACC,QAAQ,IACbD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACT,OAAO,IAC7BO,KAAK,CAACP,OAAO,IACbO,KAAK,CAACG,QAAQ,EAAE;IAClB,OAAOP,QAAQ,CAACQ,eAAe,CAACX,OAAO,CAAC;EACtC;AACR,CAAC,CAAC;AAEF,OAAO,MAAMY,SAAS,GAAGxB,WAAW,CAAC;EACnCyB,IAAI,EAAE,MAAM;EACZjB,YAAY;EACZkB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAClB,SAAS,GAAG,KAAK;MACvBkB,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAChB,OAAO,GAAG,EAAE;IACpB;EACF,CAAC;EACDiB,aAAa,EAAEC,OAAO,IAAG;IACxBA,OAAO,CACJC,OAAO,CAAClB,OAAO,CAACmB,OAAO,EAAGJ,KAAK,IAAK;MACnCA,KAAK,CAACjB,SAAS,GAAG,IAAI;IACxB,CAAC;;IAED;IAAA,CACCoB,OAAO,CAAClB,OAAO,CAACoB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAClB,SAAS,GAAG,IAAI;MACtBkB,KAAK,CAACzB,IAAI,GAAG+B,MAAM,CAACC,OAAO;IAC7B,CAAC;;IAEA;IAAA,CACCJ,OAAO,CAAClB,OAAO,CAACuB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC5CN,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAACnB,OAAO,GAAG,IAAI;MACpBmB,KAAK,CAAChB,OAAO,GAAGsB,MAAM,CAACC,OAAO;MAC9BP,KAAK,CAACzB,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEwB;AAAM,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC1C,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}