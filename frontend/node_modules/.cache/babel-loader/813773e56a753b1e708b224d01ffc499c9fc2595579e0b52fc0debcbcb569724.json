{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\components\\\\commentCard\\\\commentCard.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Typography } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CommentCard.css';\nimport { Delete } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteCommentOnPost } from '../../Actions/Post';\nimport { getFollowingPosts, getMyPosts } from '../../Actions/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentCard = _ref => {\n  _s();\n  let {\n    userId,\n    name,\n    avatar,\n    comment,\n    commentId,\n    postId,\n    isAccount\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const deleteCommentHandle = () => {\n    dispatch(deleteCommentOnPost(postId, commentId));\n    if (isAccount) {\n      dispatch(getMyPosts());\n    } else {\n      dispatch(getFollowingPosts());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentUser\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/${userId}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          minWidth: '6vmax'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isAccount ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteCommentHandle,\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : userId === user._id ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteCommentHandle,\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentCard, \"wwLJ+uYcqSHYs4Lb8QFprB6JchA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CommentCard;\nexport default CommentCard;\nvar _c;\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"names":["Button","Typography","React","Link","Delete","useDispatch","useSelector","deleteCommentOnPost","getFollowingPosts","getMyPosts","CommentCard","userId","name","avatar","comment","commentId","postId","isAccount","user","state","dispatch","deleteCommentHandle","minWidth","_id"],"sources":["D:/memories/frontend/src/components/commentCard/commentCard.jsx"],"sourcesContent":["\r\nimport { Button, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommentCard.css';\r\nimport { Delete } from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCommentOnPost } from '../../Actions/Post';\r\nimport { getFollowingPosts, getMyPosts } from '../../Actions/User';\r\n\r\nconst CommentCard = ({\r\n  userId,\r\n  name,\r\n  avatar,\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  isAccount,\r\n}) => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCommentHandle = () => {\r\n    dispatch(deleteCommentOnPost(postId, commentId));\r\n\r\n    if (isAccount) {\r\n      dispatch(getMyPosts());\r\n    } else {\r\n      dispatch(getFollowingPosts());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='commentUser'>\r\n      <Link to={`/user/${userId}`}>\r\n        <img src={avatar} alt={name} />\r\n        <Typography style={{ minWidth: '6vmax' }}>{name}</Typography>\r\n      </Link>\r\n      <Typography>{comment}</Typography>\r\n\r\n      {isAccount ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <Delete />\r\n        </Button>\r\n      ) : userId === user._id ? (\r\n        <Button onClick={deleteCommentHandle}>\r\n          <Delete />\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;"],"mappings":";;AACA,SAASA,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,mBAAmB;AAC1B,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,oBAAoB;AAAC;AAEnE,MAAMC,WAAW,GAAG,QAQd;EAAA;EAAA,IARe;IACnBC,MAAM;IACNC,IAAI;IACJC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,MAAM;IACNC;EACF,CAAC;EACC,MAAM;IAAEC;EAAK,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EACnD,MAAME,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,mBAAmB,GAAG,MAAM;IAChCD,QAAQ,CAACb,mBAAmB,CAACS,MAAM,EAAED,SAAS,CAAC,CAAC;IAEhD,IAAIE,SAAS,EAAE;MACbG,QAAQ,CAACX,UAAU,EAAE,CAAC;IACxB,CAAC,MAAM;MACLW,QAAQ,CAACZ,iBAAiB,EAAE,CAAC;IAC/B;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B,QAAC,IAAI;MAAC,EAAE,EAAG,SAAQG,MAAO,EAAE;MAAA,wBAC1B;QAAK,GAAG,EAAEE,MAAO;QAAC,GAAG,EAAED;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/B,QAAC,UAAU;QAAC,KAAK,EAAE;UAAEU,QAAQ,EAAE;QAAQ,CAAE;QAAA,UAAEV;MAAI;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,eACP,QAAC,UAAU;MAAA,UAAEE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAc,EAEjCG,SAAS,gBACR,QAAC,MAAM;MAAC,OAAO,EAAEI,mBAAoB;MAAA,uBACnC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACH,GACPV,MAAM,KAAKO,IAAI,CAACK,GAAG,gBACrB,QAAC,MAAM;MAAC,OAAO,EAAEF,mBAAoB;MAAA,uBACnC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACH,GACP,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAzCIX,WAAW;EAAA,QASEJ,WAAW,EACXD,WAAW;AAAA;AAAA,KAVxBK,WAAW;AA2CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}