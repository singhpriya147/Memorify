{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useStyles } from './styling';\nimport Typography from '@mui/material/Typography';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport Paper from '@mui/material/Paper';\n// import Card from '@mui/material/Card'\nimport TextField from '@mui/material/TextField';\n// import CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\n// import CardHeader from '@mui/material/CardHeader';\n\nimport { createPost } from '../features/Posts/postSlice';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: '',\n    fav: false\n  });\n  const {\n    creator,\n    title,\n    message,\n    tags,\n    selectedFile,\n    fav\n  } = postData;\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"clicked submit button\");\n    const Data = {\n      creator,\n      title,\n      message,\n      tags,\n      selectedFile,\n      fav\n    };\n    console.log(Data);\n    dispatch(createPost(Data));\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: '',\n      fav: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"create a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          fullWidth: true,\n          value: postData.creator,\n          onChange: e => setPostData({\n            ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({\n            ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: postData.message,\n          onChange: e => setPostData({\n            ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags (coma separated)\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({\n            ...postData,\n            tags: e.target.value.split(',')\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: _ref => {\n              let {\n                base64\n              } = _ref;\n              return setPostData({\n                ...postData,\n                selectedFile: base64\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\"\n          // onClick={clear}\n          ,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(PostForm, \"329oMuHpdXGzHGJ5JUfj6wGPoDs=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useStyles","Typography","FileBase","useDispatch","Paper","TextField","Button","createPost","useState","PostForm","classes","postData","setPostData","creator","title","message","tags","selectedFile","fav","dispatch","handleSubmit","e","preventDefault","console","log","Data","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["D:/memories/frontend/src/components/PostForm.jsx"],"sourcesContent":["import  React from 'react';\r\nimport {useStyles }from './styling';\r\nimport  Typography  from '@mui/material/Typography';\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch} from 'react-redux'\r\nimport Paper from '@mui/material/Paper';\r\n// import Card from '@mui/material/Card'\r\nimport TextField from '@mui/material/TextField';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\n// import CardHeader from '@mui/material/CardHeader';\r\n\r\nimport {createPost} from '../features/Posts/postSlice'\r\nimport{useState} from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction PostForm() {\r\n\r\n\r\nconst classes=useStyles()\r\n\r\n   const [postData, setPostData] = useState({\r\n  creator:'',\r\n  title:'',\r\n  message: '',\r\n  tags:'',\r\n  selectedFile:'',\r\n  fav:false,\r\n   \r\n   });\r\n\r\n\r\nconst { creator, title, message, tags, selectedFile,fav } =\r\n  postData;\r\n\r\nconst dispatch=useDispatch()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n\r\n\r\n\r\nconst handleSubmit=(e)=>{\r\n e.preventDefault();\r\n  console.log(\"clicked submit button\")\r\nconst Data = {\r\n  creator,\r\n  title,\r\n  message,\r\n  tags,\r\n  selectedFile,\r\n  fav,\r\n};\r\nconsole.log(Data);\r\n\r\n\r\n  dispatch(createPost(Data))\r\n  \r\n  setPostData({\r\n    creator: '',\r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    selectedFile: '',\r\n    fav:false,\r\n  });\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <form\r\n          autoComplete='off'\r\n          noValidate\r\n          className={`${classes.root} ${classes.form}`}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Typography variant='h6'>\r\n            {/* {currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'} */}\r\n            create a \r\n          </Typography>\r\n          <TextField\r\n            name='creator'\r\n            variant='outlined'\r\n            label='Creator'\r\n            fullWidth\r\n            value={postData.creator}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, creator: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            name='title'\r\n            variant='outlined'\r\n            label='Title'\r\n            fullWidth\r\n            value={postData.title}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, title: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            name='message'\r\n            variant='outlined'\r\n            label='Message'\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={postData.message}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, message: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            name='tags'\r\n            variant='outlined'\r\n            label='Tags (coma separated)'\r\n            fullWidth\r\n            value={postData.tags}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, tags: e.target.value.split(',') })\r\n            }\r\n          />\r\n          <div className={classes.fileInput}>\r\n            <FileBase\r\n              type='file'\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setPostData({ ...postData, selectedFile: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            variant='contained'\r\n            color='primary'\r\n            size='large'\r\n            type='submit'\r\n            fullWidth\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            size='small'\r\n            // onClick={clear}\r\n            fullWidth\r\n          >\r\n            Clear\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default PostForm\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}