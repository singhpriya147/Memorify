{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport postService from './postService';\nconst initialState = {\n  posts: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// create new goal\n\nexport const createGoal = createAsyncThunk('posts/create', async postData => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await postService.createGoal(postData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  }\n});\nexport const {\n  reset\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","postService","initialState","posts","isError","isSuccess","isLoading","message","createGoal","postData","token","thunkAPI","getState","auth","user","error","response","data","toString","rejectWithValue","postSlice","name","reducers","reset","state","actions","reducer"],"sources":["C:/Users/ASUS/Desktop/memories/frontend/src/features/Posts/postSlice.js"],"sourcesContent":["import {createSlice ,createAsyncThunk} from '@reduxjs/toolkit'\r\nimport postService from './postService'\r\nconst initialState={\r\n posts:[],\r\n isError:false,\r\n isSuccess:false,\r\n isLoading:false,\r\n message:'',\r\n}\r\n\r\n// create new goal\r\n \r\nexport const createGoal=createAsyncThunk('posts/create',async(postData)=>{\r\n\r\n try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await postService.createGoal(postData, token)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n        }\r\n})\r\nexport const  postSlice=createSlice({\r\n name:'posts',\r\n initialState,\r\n reducers:{\r\n     reset:(state)=>initialState\r\n }\r\n\r\n})\r\nexport  const {reset}=postSlice.actions\r\nexport default postSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,YAAY,GAAC;EAClBC,KAAK,EAAC,EAAE;EACRC,OAAO,EAAC,KAAK;EACbC,SAAS,EAAC,KAAK;EACfC,SAAS,EAAC,KAAK;EACfC,OAAO,EAAC;AACT,CAAC;;AAED;;AAEA,OAAO,MAAMC,UAAU,GAACR,gBAAgB,CAAC,cAAc,EAAC,MAAMS,QAAQ,IAAG;EAExE,IAAI;IACC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACJ,KAAK;IACjD,OAAO,MAAMT,WAAW,CAACO,UAAU,CAACC,QAAQ,EAAEC,KAAK,CAAC;EACtD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMR,OAAO,GACVQ,KAAK,CAACC,QAAQ,IACbD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACV,OAAO,IAC7BQ,KAAK,CAACR,OAAO,IACbQ,KAAK,CAACG,QAAQ,EAAE;IAClB,OAAOP,QAAQ,CAACQ,eAAe,CAACZ,OAAO,CAAC;EACtC;AACR,CAAC,CAAC;AACF,OAAO,MAAOa,SAAS,GAACrB,WAAW,CAAC;EACnCsB,IAAI,EAAC,OAAO;EACZnB,YAAY;EACZoB,QAAQ,EAAC;IACLC,KAAK,EAAEC,KAAK,IAAGtB;EACnB;AAED,CAAC,CAAC;AACF,OAAQ,MAAM;EAACqB;AAAK,CAAC,GAACH,SAAS,CAACK,OAAO;AACvC,eAAeL,SAAS,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}