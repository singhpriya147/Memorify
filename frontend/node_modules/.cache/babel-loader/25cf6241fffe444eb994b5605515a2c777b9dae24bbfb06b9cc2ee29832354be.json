{"ast":null,"code":"// import{createSlice,createAsyncThunk} from '@reduxjs/toolkit';\n// import userService from './userService'\n\n// const user = JSON.parse(localStorage.getItem('user'));\n\n// const initialState = {\n//   user: user ? user : null,\n//   isError: false,\n//   isSuccess: false,\n//   isLoading: false,\n//   message: '',\n// };\n\n// export const userSlice = createSlice({\n//   name: 'user',\n//   initialState,\n//   reducers: {\n//     reset: (state) => {\n//       state.isLoading = false;\n//       state.isSuccess = false;\n//       state.isError = false;\n//       state.message = '';\n//     },\n//   },\n//   extraReducers:(builder)=>{\n//    builder\n//      .addCase(getUser.pending, (state) => {\n//        state.isLoading = true;\n//      })\n\n//      // fulfilled\n//      .addCase(getUser.fulfilled, (state, action) => {\n//        state.isLoading = false;\n//        state.isSuccess = true;\n//        state.user = action.payload;\n//      })\n\n//       //rejected\n//       .addCase(getUser.rejected, (state, action) => {\n//         state.isLoading = false;\n//         state.isError = true;\n//         state.message = action.payload;\n//         state.user = null;\n//       })\n//   }\n// });\n// export const { reset } = userSlice.actions;\n// export default userSlice.reducer;","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/memories/frontend/src/features/user/userSlice.jsx"],"sourcesContent":["// import{createSlice,createAsyncThunk} from '@reduxjs/toolkit';\r\n// import userService from './userService'\r\n\r\n// const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n// const initialState = {\r\n//   user: user ? user : null,\r\n//   isError: false,\r\n//   isSuccess: false,\r\n//   isLoading: false,\r\n//   message: '',\r\n// };\r\n\r\n\r\n\r\n// export const userSlice = createSlice({\r\n//   name: 'user',\r\n//   initialState,\r\n//   reducers: {\r\n//     reset: (state) => {\r\n//       state.isLoading = false;\r\n//       state.isSuccess = false;\r\n//       state.isError = false;\r\n//       state.message = '';\r\n//     },\r\n//   },\r\n//   extraReducers:(builder)=>{\r\n//    builder\r\n//      .addCase(getUser.pending, (state) => {\r\n//        state.isLoading = true;\r\n//      })\r\n\r\n//      // fulfilled\r\n//      .addCase(getUser.fulfilled, (state, action) => {\r\n//        state.isLoading = false;\r\n//        state.isSuccess = true;\r\n//        state.user = action.payload;\r\n//      })\r\n\r\n//       //rejected\r\n//       .addCase(getUser.rejected, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.isError = true;\r\n//         state.message = action.payload;\r\n//         state.user = null;\r\n//       })\r\n//   }\r\n// });\r\n// export const { reset } = userSlice.actions;\r\n// export default userSlice.reducer;"],"mappings":"AAAA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}