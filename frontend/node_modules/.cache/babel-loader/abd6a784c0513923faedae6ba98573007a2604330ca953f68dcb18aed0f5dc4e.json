{"ast":null,"code":"var _jsxFileName = \"D:\\\\memories\\\\frontend\\\\src\\\\components\\\\UpdateProfile.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './Header';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { getUser, updateProfile } from '../features/auth/authSlice';\nimport Dashboard from '../pages/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  console.log(user._id);\n  // console.log(user.token);\n  const token = user.token;\n  console.log(token);\n  const [name, setName] = useState(user ? user.name : '');\n  const [email, setEmail] = useState(user ? user.email : '');\n  const submitHandler = async e => {\n    e.preventDefault();\n    try {\n      await dispatch(updateProfile({\n        name,\n        email\n      }));\n      //  console.log('Profile updated successfully');\n      setName('');\n      setEmail('');\n      //  <Dashboard/>\n      await dispatch(getUser());\n    } catch (error) {\n      console.log('Failed to update profile:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          marginLeft: '30%',\n          height: ' 400px',\n          backgroundColor: ' \t#E0E0E0'\n        },\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          placeholder: \"name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          placeholder: \"name\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProfile, \"kDEjW7T8/RTD5FR5sStXfPLmh2Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","Header","useState","useDispatch","useSelector","Button","getUser","updateProfile","Dashboard","UpdateProfile","user","state","auth","dispatch","console","log","_id","token","name","setName","email","setEmail","submitHandler","e","preventDefault","error","marginLeft","height","backgroundColor","target","value"],"sources":["D:/memories/frontend/src/components/UpdateProfile.jsx"],"sourcesContent":["import React from 'react'\r\nimport Header from './Header'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button  from '@mui/material/Button'\r\nimport { getUser, updateProfile } from '../features/auth/authSlice'\r\nimport Dashboard from '../pages/Dashboard'\r\n\r\n\r\nconst UpdateProfile = () => {\r\nconst{user}=useSelector((state)=>state.auth)\r\nconst dispatch = useDispatch();\r\nconsole.log(user._id);\r\n// console.log(user.token);\r\nconst token =user.token;\r\nconsole.log(token);\r\nconst[name,setName]=useState(user? user.name:'');\r\nconst[email,setEmail]=useState(user? user.email:'');\r\n\r\n\r\nconst submitHandler=async(e)=>{\r\n e.preventDefault();\r\n   try {\r\n     await dispatch(updateProfile({ name, email}));\r\n    //  console.log('Profile updated successfully');\r\n     setName('');\r\n     setEmail('');\r\n    //  <Dashboard/>\r\n    await dispatch(getUser())\r\n   } catch (error) {\r\n     console.log('Failed to update profile:', error);\r\n   }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <form\r\n          style={{\r\n            marginLeft: '30%',\r\n            height: ' 400px',\r\n            backgroundColor: ' \t#E0E0E0',\r\n          }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <h3>Update Profile</h3>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            placeholder='name'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            value={email}\r\n            placeholder='name'\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button type='submit' >Update</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default UpdateProfile"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAO,sBAAsB;AAC1C,SAASC,OAAO,EAAEC,aAAa,QAAQ,4BAA4B;AACnE,OAAOC,SAAS,MAAM,oBAAoB;AAAA;AAG1C,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC5B,MAAK;IAACC;EAAI,CAAC,GAACN,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAACC,IAAI,CAAC;EAC5C,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9BW,OAAO,CAACC,GAAG,CAACL,IAAI,CAACM,GAAG,CAAC;EACrB;EACA,MAAMC,KAAK,GAAEP,IAAI,CAACO,KAAK;EACvBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EAClB,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACjB,QAAQ,CAACQ,IAAI,GAAEA,IAAI,CAACQ,IAAI,GAAC,EAAE,CAAC;EAChD,MAAK,CAACE,KAAK,EAACC,QAAQ,CAAC,GAACnB,QAAQ,CAACQ,IAAI,GAAEA,IAAI,CAACU,KAAK,GAAC,EAAE,CAAC;EAGnD,MAAME,aAAa,GAAC,MAAMC,CAAC,IAAG;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAChB,IAAI;MACF,MAAMX,QAAQ,CAACN,aAAa,CAAC;QAAEW,IAAI;QAAEE;MAAK,CAAC,CAAC,CAAC;MAC9C;MACCD,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACb;MACA,MAAMR,QAAQ,CAACP,OAAO,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdX,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEU,KAAK,CAAC;IACjD;EACH,CAAC;EAIC,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAA,uBACE;QACE,KAAK,EAAE;UACLC,UAAU,EAAE,KAAK;UACjBC,MAAM,EAAE,QAAQ;UAChBC,eAAe,EAAE;QACnB,CAAE;QACF,QAAQ,EAAEN,aAAc;QAAA,wBAExB;UAAA,UAAI;QAAc;UAAA;UAAA;UAAA;QAAA,QAAK,eACvB;UACE,IAAI,EAAC,MAAM;UACX,KAAK,EAAEJ,IAAK;UACZ,WAAW,EAAC,MAAM;UAClB,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACM,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACzC,eACF;UACE,IAAI,EAAC,MAAM;UACX,KAAK,EAAEV,KAAM;UACb,WAAW,EAAC,MAAM;UAClB,QAAQ,EAAGG,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACM,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC1C,eACF,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACjC;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAzDKrB,aAAa;EAAA,QACPL,WAAW,EACND,WAAW;AAAA;AAAA,KAFtBM,aAAa;AA2DnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}