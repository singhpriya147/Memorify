{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/posts';\n\n// create new post\n\nconst createPost = async (postData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, postData, config);\n  console.log('data posted');\n  return response.data;\n};\n\n// const createPost = async (postData, token) => {\n//   const config = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(postData),\n//   };\n\n//   try {\n//     const response = await fetch(API_URL, config);\n//     console.log('data posted');\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// };\n\nconst getUserFeed = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  console.log(' getFeedpost is working');\n  console.log(res);\n  return response.data;\n};\nconst getUserPosts = async (userId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + '/' + `${userId}` + '/posts', config);\n  console.log(' getUserpost is working');\n  console.log(response);\n  return response.data;\n};\nconst deletePost = async (postId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(API_URL + '/' + postId, config);\n  console.log(response);\n  return response.data;\n};\nconst postService = {\n  createPost,\n  getUserFeed,\n  getUserPosts,\n  deletePost\n};\nexport default postService;","map":{"version":3,"names":["axios","API_URL","createPost","postData","token","config","headers","Authorization","response","post","console","log","data","getUserFeed","get","res","getUserPosts","userId","deletePost","postId","delete","postService"],"sources":["D:/memories/frontend/src/features/Posts/postService.js"],"sourcesContent":["import axios from 'axios';\r\nconst API_URL='/api/posts';\r\n\r\n// create new post\r\n\r\nconst createPost=async(postData,token)=>{\r\n const config = {\r\n   headers: {\r\n     Authorization: `Bearer ${token}`,\r\n   },\r\n };\r\n  const response = await axios.post(API_URL, postData, config);\r\n  console.log('data posted');\r\n  return response.data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const createPost = async (postData, token) => {\r\n//   const config = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(postData),\r\n//   };\r\n\r\n//   try {\r\n//     const response = await fetch(API_URL, config);\r\n//     console.log('data posted');\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getUserFeed = async (token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL,config);\r\n  console.log(' getFeedpost is working');\r\n  console.log(res);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst getUserPosts = async (userId,token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(API_URL + '/' + `${userId}`+ '/posts', config);\r\n  console.log(' getUserpost is working');\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst deletePost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const response = await axios.delete(API_URL +'/'+postId, config);\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst postService = {\r\n  createPost,\r\n  getUserFeed,\r\n  getUserPosts,\r\n  deletePost,\r\n\r\n \r\n};\r\n\r\nexport default postService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAC,YAAY;;AAE1B;;AAEA,MAAMC,UAAU,GAAC,OAAMC,QAAQ,EAACC,KAAK,KAAG;EACvC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EACA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACR,OAAO,EAAEE,QAAQ,EAAEE,MAAM,CAAC;EAC5DK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;;AAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,MAAMC,WAAW,GAAG,MAAOT,KAAK,IAAK;EACnC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACc,GAAG,CAACb,OAAO,EAACI,MAAM,CAAC;EAChDK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;EAChB,OAAOP,QAAQ,CAACI,IAAI;AACtB,CAAC;AAID,MAAMI,YAAY,GAAG,OAAOC,MAAM,EAACb,KAAK,KAAK;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACc,GAAG,CAACb,OAAO,GAAG,GAAG,GAAI,GAAEgB,MAAO,EAAC,GAAE,QAAQ,EAAEZ,MAAM,CAAC;EAC/EK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC;AAGD,MAAMM,UAAU,GAAG,OAAOC,MAAM,EAAEf,KAAK,KAAK;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACoB,MAAM,CAACnB,OAAO,GAAE,GAAG,GAACkB,MAAM,EAAEd,MAAM,CAAC;EAChEK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC;AAOD,MAAMS,WAAW,GAAG;EAClBnB,UAAU;EACVW,WAAW;EACXG,YAAY;EACZE;AAGF,CAAC;AAED,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}